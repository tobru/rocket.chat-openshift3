{"version":3,"sources":["meteor://ðŸ’»app/server/methods/unmuteUserInRoom.coffee"],"names":[],"mappings":";;;;;;;;;AAAA;;AAAA,MAAM,CAAC,OAAP,CACC;AAAA,oBAAkB,SAAC,IAAD;AACjB;AAAA,aAAS,MAAM,CAAC,MAAP,EAAT;AAAA,IACA,MAAM,IAAN,EAAY,KAAK,CAAC,eAAN,CAAsB;AAAA,MAAE,KAAK,MAAP;AAAA,MAAe,UAAU,MAAzB;KAAtB,CAAZ,CADA;AAGA,mBAAiB,CAAC,KAAK,CAAC,aAAjB,CAA+B,MAA/B,EAAuC,WAAvC,EAAoD,IAAI,CAAC,GAAzD,CAAP;AACC,YAAU,UAAM,CAAC,KAAP,CAAa,mBAAb,EAAkC,aAAlC,EAAiD;AAAA,QAAE,QAAQ,kBAAV;OAAjD,CAAV,CADD;KAHA;AAAA,IAMA,OAAO,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,WAAxB,CAAoC,IAAI,CAAC,GAAzC,CANP;AAOA,QAAG,KAAH;AACC,YAAU,UAAM,CAAC,KAAP,CAAa,oBAAb,EAAmC,cAAnC,EAAmD;AAAA,QAAE,QAAQ,kBAAV;OAAnD,CAAV,CADD;KAPA;AAUA,eAAG,IAAI,CAAC,EAAL,KAAe,GAAf,YAAoB,GAAvB;AACC,YAAU,UAAM,CAAC,KAAP,CAAa,yBAAb,EAAwC,IAAI,CAAC,CAAL,GAAS,2BAAjD,EAA8E;AAAA,QAAE,QAAQ,kBAAV;AAAA,QAA8B,MAAM,IAAI,CAAC,CAAzC;OAA9E,CAAV,CADD;KAVA;AAaA,eAAG,IAAI,CAAC,QAAL,+BAAsB,IAAI,CAAE,mBAAN,IAAmB,EAAzC,WAAH;AACC,YAAU,UAAM,CAAC,KAAP,CAAa,wBAAb,EAAuC,0BAAvC,EAAmE;AAAA,QAAE,QAAQ,kBAAV;OAAnE,CAAV,CADD;KAbA;AAAA,IAgBA,cAAc,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,iBAAxB,CAA0C,IAAI,CAAC,QAA/C,CAhBd;AAAA,IAkBA,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,sBAAxB,CAA+C,IAAI,CAAC,GAApD,EAAyD,WAAW,CAAC,QAArE,CAlBA;AAAA,IAoBA,WAAW,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,WAAxB,CAAoC,MAApC,CApBX;AAAA,IAqBA,UAAU,CAAC,MAAM,CAAC,QAAQ,CAAC,kCAA3B,CAA8D,IAAI,CAAC,GAAnE,EAAwE,WAAxE,EACC;AAAA,SACC;AAAA,aAAK,QAAQ,CAAC,GAAd;AAAA,QACA,UAAU,QAAQ,CAAC,QADnB;OADD;KADD,CArBA;AA0BA,WAAO,IAAP,CA3BiB;EAAA,CAAlB;CADD","file":"/server/methods/unmuteUserInRoom.coffee.js","sourcesContent":["Meteor.methods\n\tunmuteUserInRoom: (data) ->\n\t\tfromId = Meteor.userId()\n\t\tcheck(data, Match.ObjectIncluding({ rid: String, username: String }))\n\n\t\tunless RocketChat.authz.hasPermission(fromId, 'mute-user', data.rid)\n\t\t\tthrow new Meteor.Error 'error-not-allowed', 'Not allowed', { method: 'unmuteUserInRoom' }\n\n\t\troom = RocketChat.models.Rooms.findOneById data.rid\n\t\tif not room\n\t\t\tthrow new Meteor.Error 'error-invalid-room', 'Invalid room', { method: 'unmuteUserInRoom' }\n\n\t\tif room.t not in ['c', 'p']\n\t\t\tthrow new Meteor.Error 'error-invalid-room-type', room.t + ' is not a valid room type', { method: 'unmuteUserInRoom', type: room.t }\n\n\t\tif data.username not in (room?.usernames or [])\n\t\t\tthrow new Meteor.Error 'error-user-not-in-room', 'User is not in this room', { method: 'unmuteUserInRoom' }\n\n\t\tunmutedUser = RocketChat.models.Users.findOneByUsername data.username\n\n\t\tRocketChat.models.Rooms.unmuteUsernameByRoomId data.rid, unmutedUser.username\n\n\t\tfromUser = RocketChat.models.Users.findOneById fromId\n\t\tRocketChat.models.Messages.createUserUnmutedWithRoomIdAndUser data.rid, unmutedUser,\n\t\t\tu:\n\t\t\t\t_id: fromUser._id\n\t\t\t\tusername: fromUser.username\n\n\t\treturn true\n"]}