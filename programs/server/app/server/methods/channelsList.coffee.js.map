{"version":3,"sources":["meteor://ðŸ’»app/server/methods/channelsList.coffee"],"names":[],"mappings":";;;;;;;;;AAAA,MAAM,CAAC,OAAP,CACC;AAAA,gBAAc,SAAC,MAAD,EAAS,WAAT,EAAsB,KAAtB,EAA6B,IAA7B;AACb;AAAA,QAAG,OAAU,CAAC,MAAP,EAAP;AACC,YAAU,UAAM,CAAC,KAAP,CAAa,oBAAb,EAAmC,cAAnC,EAAmD;AAAA,QAAE,QAAQ,cAAV;OAAnD,CAAV,CADD;KAAA;AAAA,IAGA,UAAW;AAAA,MAAE,QAAQ;AAAA,QAAE,MAAM,CAAR;AAAA,QAAW,GAAG,CAAd;OAAV;AAAA,MAA6B,MAAM;AAAA,QAAE,MAAK,EAAP;OAAnC;KAHX;AAIA,QAAG,CAAC,CAAC,QAAF,CAAW,KAAX,CAAH;AACC,aAAO,CAAC,KAAR,GAAgB,KAAhB,CADD;KAJA;AAMA,QAAG,CAAC,CAAC,IAAF,CAAO,IAAP,CAAH;AACC,cAAO,IAAP;AAAA,aACM,MADN;AAEE,iBAAO,CAAC,IAAR,GAAe;AAAA,YAAE,MAAM,CAAR;WAAf,CAFF;AACM;AADN,aAGM,MAHN;AAIE,iBAAO,CAAC,IAAR,GAAe;AAAA,YAAE,MAAM,EAAR;WAAf,CAJF;AAAA,OADD;KANA;AAAA,IAaA,YAAY,EAbZ;AAcA,QAAG,gBAAiB,SAApB;AACC,UAAG,UAAU,CAAC,KAAK,CAAC,aAAjB,CAA+B,MAAM,CAAC,MAAP,EAA/B,EAAgD,aAAhD,CAAH;AACC,iBAAS,CAAC,IAAV,CAAe;AAAA,UAAC,MAAM,GAAP;SAAf,EADD;OAAA,MAEK,IAAG,UAAU,CAAC,KAAK,CAAC,aAAjB,CAA+B,MAAM,CAAC,MAAP,EAA/B,EAAgD,kBAAhD,CAAH;AACJ,kBAAU,CAAC,CAAC,KAAF,CAAQ,UAAU,CAAC,MAAM,CAAC,aAAa,CAAC,mBAAhC,CAAoD,GAApD,EAAyD,MAAM,CAAC,MAAP,EAAzD,CAAyE,CAAC,KAA1E,EAAR,EAA2F,KAA3F,CAAV;AAAA,QACA,SAAS,CAAC,IAAV,CAAe;AAAA,UAAC,MAAM,GAAP;AAAA,UAAY,KAAK,OAAjB;SAAf,CADA,CADI;OAHN;KAdA;AAqBA,QAAG,gBAAiB,QAAjB,IAA8B,UAAU,CAAC,KAAK,CAAC,aAAjB,CAA+B,MAAM,CAAC,MAAP,EAA/B,EAAgD,aAAhD,CAAjC;AACC,yHAA+C,CAAE,wCAAjD;AAAA,MACA,aAAa,UAAU,CAAC,QAAQ,CAAC,GAApB,CAAwB,0BAAxB,CADb;AAAA,MAEA,gBAAmB,gBAAH,GAAkB,QAAlB,GAAgC,UAFhD;AAGA,UAAG,aAAH;AACC,iBAAS,CAAC,IAAV,CAAe;AAAA,UAAC,MAAM,GAAP;AAAA,UAAY,UAAU,MAAM,CAAC,IAAP,EAAa,CAAC,QAApC;SAAf,EADD;OAJD;KArBA;AA4BA,QAAG,SAAS,CAAC,MAAb;AACC,UAAG,MAAH;AACC,eAAO;AAAA,UAAE,UAAU,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,qCAAxB,CAA8D,MAA9D,EAAsE,SAAtE,EAAiF,OAAjF,CAAyF,CAAC,KAA1F,EAAZ;SAAP,CADD;OAAA;AAGC,eAAO;AAAA,UAAE,UAAU,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,+BAAxB,CAAwD,SAAxD,EAAmE,OAAnE,CAA2E,CAAC,KAA5E,EAAZ;SAAP,CAHD;OADD;KAAA;AAMC,aAAO;AAAA,QAAE,UAAU,EAAZ;OAAP,CAND;KA7Ba;EAAA,CAAd;CADD","file":"/server/methods/channelsList.coffee.js","sourcesContent":["Meteor.methods\n\tchannelsList: (filter, channelType, limit, sort) ->\n\t\tif not Meteor.userId()\n\t\t\tthrow new Meteor.Error 'error-invalid-user', 'Invalid user', { method: 'channelsList' }\n\n\t\toptions =  { fields: { name: 1, t: 1 }, sort: { msgs:-1 } }\n\t\tif _.isNumber limit\n\t\t\toptions.limit = limit\n\t\tif _.trim(sort)\n\t\t\tswitch sort\n\t\t\t\twhen 'name'\n\t\t\t\t\toptions.sort = { name: 1 }\n\t\t\t\twhen 'msgs'\n\t\t\t\t\toptions.sort = { msgs: -1 }\n\n\t\troomTypes = []\n\t\tif channelType isnt 'private'\n\t\t\tif RocketChat.authz.hasPermission Meteor.userId(), 'view-c-room'\n\t\t\t\troomTypes.push {type: 'c'}\n\t\t\telse if RocketChat.authz.hasPermission Meteor.userId(), 'view-joined-room'\n\t\t\t\troomIds = _.pluck RocketChat.models.Subscriptions.findByTypeAndUserId('c', Meteor.userId()).fetch(), 'rid'\n\t\t\t\troomTypes.push {type: 'c', ids: roomIds}\n\n\t\tif channelType isnt 'public' and RocketChat.authz.hasPermission Meteor.userId(), 'view-p-room'\n\t\t\tuserPref = Meteor.user()?.settings?.preferences?.mergeChannels\n\t\t\tglobalPref = RocketChat.settings.get('UI_Merge_Channels_Groups')\n\t\t\tmergeChannels = if userPref? then userPref else globalPref\n\t\t\tif mergeChannels\n\t\t\t\troomTypes.push {type: 'p', username: Meteor.user().username}\n\n\t\tif roomTypes.length\n\t\t\tif filter\n\t\t\t\treturn { channels: RocketChat.models.Rooms.findByNameContainingTypesWithUsername(filter, roomTypes, options).fetch() }\n\t\t\telse\n\t\t\t\treturn { channels: RocketChat.models.Rooms.findContainingTypesWithUsername(roomTypes, options).fetch() }\n\t\telse\n\t\t\treturn { channels: [] }\n"]}