{"version":3,"sources":["meteor://ðŸ’»app/server/methods/loadHistory.coffee"],"names":[],"mappings":";;;;;;;;;AAAA,MAAM,CAAC,OAAP,CACC;AAAA,eAAa,SAAC,GAAD,EAAM,GAAN,EAAW,KAAX,EAAqB,EAArB;AACZ;;MADuB,QAAM;KAC7B;AAAA,QAAG,OAAU,CAAC,MAAP,EAAP;AACC,YAAU,UAAM,CAAC,KAAP,CAAa,oBAAb,EAAmC,cAAnC,EAAmD;AAAA,QAAE,QAAQ,aAAV;OAAnD,CAAV,CADD;KAAA;AAAA,IAGA,SAAS,MAAM,CAAC,MAAP,EAHT;AAIA,eAAa,CAAC,IAAP,CAAY,eAAZ,EAA6B,GAA7B,EAAkC,MAAlC,CAAP;AACC,aAAO,KAAP,CADD;KAJA;AAAA,IAOA,UACC;AAAA,YACC;AAAA,YAAI,EAAJ;OADD;AAAA,MAEA,OAAO,KAFP;KARD;AAYA,QAAG,WAAc,CAAC,QAAQ,CAAC,GAApB,CAAwB,0BAAxB,CAAP;AACC,aAAO,CAAC,MAAR,GAAiB;AAAA,QAAE,YAAY,CAAd;OAAjB,CADD;KAZA;AAeA,QAAG,WAAH;AACC,gBAAU,UAAU,CAAC,MAAM,CAAC,QAAQ,CAAC,kCAA3B,CAA8D,GAA9D,EAAmE,GAAnE,EAAwE,OAAxE,CAAgF,CAAC,KAAjF,EAAV,CADD;KAAA;AAGC,gBAAU,UAAU,CAAC,MAAM,CAAC,QAAQ,CAAC,mBAA3B,CAA+C,GAA/C,EAAoD,OAApD,CAA4D,CAAC,KAA7D,EAAV,CAHD;KAfA;AAAA,IAoBA,WAAW,CAAC,CAAC,GAAF,CAAM,OAAN,EAAe,SAAC,OAAD;AACzB,aAAO,CAAC,OAAR,GAAkB,CAAC,CAAC,SAAF,CAAY,OAAO,CAAC,OAApB,EAA6B;AAAA,QAAE,KAAK,MAAP;OAA7B,CAAlB;AACA,aAAO,OAAP,CAFyB;IAAA,CAAf,CApBX;AAAA,IAwBA,kBAAkB,CAxBlB;AA0BA,QAAG,UAAH;AACC,qBAAe,QAAS,SAAQ,CAAC,MAAT,GAAkB,CAAlB,CAAxB;AACA,kCAAG,YAAY,CAAE,YAAd,GAAmB,EAAtB;AACC,sBAAc,CAAC,KAAf;AAAA,QACA,iBAAiB,UAAU,CAAC,MAAM,CAAC,QAAQ,CAAC,oCAA3B,CAAgE,GAAhE,EAAqE,EAArE,EAAyE,YAAY,CAAC,EAAtF,EAA0F;AAAA,UAAE,OAAO,CAAT;AAAA,UAAY,MAAM;AAAA,YAAE,IAAI,CAAN;WAAlB;SAA1F,CADjB;AAAA,QAEA,cAAc,cAAc,CAAC,KAAf,EAAuB,GAFrC;AAAA,QAGA,kBAAkB,cAAc,CAAC,KAAf,EAHlB,CADD;OAFD;KA1BA;AAkCA,WAAO;AAAA,MACN,UAAU,QADJ;AAAA,MAEN,aAAa,WAFP;AAAA,MAGN,iBAAiB,eAHX;KAAP,CAnCY;EAAA,CAAb;CADD","file":"/server/methods/loadHistory.coffee.js","sourcesContent":["Meteor.methods\n\tloadHistory: (rid, end, limit=20, ls) ->\n\t\tif not Meteor.userId()\n\t\t\tthrow new Meteor.Error 'error-invalid-user', 'Invalid user', { method: 'loadHistory' }\n\n\t\tfromId = Meteor.userId()\n\t\tunless Meteor.call 'canAccessRoom', rid, fromId\n\t\t\treturn false\n\n\t\toptions =\n\t\t\tsort:\n\t\t\t\tts: -1\n\t\t\tlimit: limit\n\n\t\tif not RocketChat.settings.get 'Message_ShowEditedStatus'\n\t\t\toptions.fields = { 'editedAt': 0 }\n\n\t\tif end?\n\t\t\trecords = RocketChat.models.Messages.findVisibleByRoomIdBeforeTimestamp(rid, end, options).fetch()\n\t\telse\n\t\t\trecords = RocketChat.models.Messages.findVisibleByRoomId(rid, options).fetch()\n\n\t\tmessages = _.map records, (message) ->\n\t\t\tmessage.starred = _.findWhere message.starred, { _id: fromId }\n\t\t\treturn message\n\n\t\tunreadNotLoaded = 0\n\n\t\tif ls?\n\t\t\tfirstMessage = messages[messages.length - 1]\n\t\t\tif firstMessage?.ts > ls\n\t\t\t\tdelete options.limit\n\t\t\t\tunreadMessages = RocketChat.models.Messages.findVisibleByRoomIdBetweenTimestamps(rid, ls, firstMessage.ts, { limit: 1, sort: { ts: 1 } })\n\t\t\t\tfirstUnread = unreadMessages.fetch()[0]\n\t\t\t\tunreadNotLoaded = unreadMessages.count()\n\n\t\treturn {\n\t\t\tmessages: messages\n\t\t\tfirstUnread: firstUnread\n\t\t\tunreadNotLoaded: unreadNotLoaded\n\t\t}\n"]}