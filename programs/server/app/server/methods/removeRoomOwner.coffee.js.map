{"version":3,"sources":["meteor://ðŸ’»app/server/methods/removeRoomOwner.coffee"],"names":[],"mappings":";;;;;;;;;AAAA,MAAM,CAAC,OAAP,CACC;AAAA,mBAAiB,SAAC,GAAD,EAAM,MAAN;AAChB;AAAA,eAAa,CAAC,MAAP,EAAP;AACC,YAAU,UAAM,CAAC,KAAP,CAAa,oBAAb,EAAmC,cAAnC,EAAmD;AAAA,QAAE,QAAQ,iBAAV;OAAnD,CAAV,CADD;KAAA;AAAA,IAGA,MAAM,GAAN,EAAW,MAAX,CAHA;AAAA,IAIA,MAAM,MAAN,EAAc,MAAd,CAJA;AAMA,mBAAiB,CAAC,KAAK,CAAC,aAAjB,CAA+B,MAAM,CAAC,MAAP,EAA/B,EAAgD,WAAhD,EAA6D,GAA7D,CAAP;AACC,YAAU,UAAM,CAAC,KAAP,CAAa,mBAAb,EAAkC,aAAlC,EAAiD;AAAA,QAAE,QAAQ,iBAAV;OAAjD,CAAV,CADD;KANA;AAAA,IASA,eAAe,UAAU,CAAC,MAAM,CAAC,aAAa,CAAC,wBAAhC,CAAyD,GAAzD,EAA8D,MAA9D,CATf;AAUA,QAAO,oBAAP;AACC,YAAU,UAAM,CAAC,KAAP,CAAa,oBAAb,EAAmC,cAAnC,EAAmD;AAAA,QAAE,QAAQ,iBAAV;OAAnD,CAAV,CADD;KAVA;AAAA,IAaA,YAAY,UAAU,CAAC,KAAK,CAAC,cAAjB,CAAgC,OAAhC,EAAyC,GAAzC,CAA6C,CAAC,KAA9C,EAbZ;AAcA,QAAG,cAAa,CAAhB;AACC,YAAU,UAAM,CAAC,KAAP,CAAa,yBAAb,EAAwC,0EAAxC,EAAoH;AAAA,QAAE,QAAQ,iBAAV;OAApH,CAAV,CADD;KAdA;AAAA,IAiBA,UAAU,CAAC,MAAM,CAAC,aAAa,CAAC,cAAhC,CAA+C,YAAY,CAAC,GAA5D,EAAiE,OAAjE,CAjBA;AAAA,IAmBA,OAAO,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,WAAxB,CAAoC,MAApC,CAnBP;AAAA,IAoBA,WAAW,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,WAAxB,CAAoC,MAAM,CAAC,MAAP,EAApC,CApBX;AAAA,IAqBA,UAAU,CAAC,MAAM,CAAC,QAAQ,CAAC,8CAA3B,CAA0E,GAA1E,EAA+E,IAA/E,EACC;AAAA,SACC;AAAA,aAAK,QAAQ,CAAC,GAAd;AAAA,QACA,UAAU,QAAQ,CAAC,QADnB;OADD;AAAA,MAGA,MAAM,OAHN;KADD,CArBA;AA2BA,QAAG,UAAU,CAAC,QAAQ,CAAC,GAApB,CAAwB,iBAAxB,CAAH;AACC,gBAAU,CAAC,aAAa,CAAC,SAAzB,CAAmC,cAAnC,EAAmD;AAAA,QAAE,MAAM,SAAR;AAAA,QAAmB,KAAK,OAAxB;AAAA,QAAiC,GAAG;AAAA,UAAE,KAAK,IAAI,CAAC,GAAZ;AAAA,UAAiB,UAAU,IAAI,CAAC,QAAhC;SAApC;AAAA,QAAgF,OAAO,GAAvF;OAAnD,EADD;KA3BA;AA8BA,WAAO,IAAP,CA/BgB;EAAA,CAAjB;CADD","file":"/server/methods/removeRoomOwner.coffee.js","sourcesContent":["Meteor.methods\n\tremoveRoomOwner: (rid, userId) ->\n\t\tunless Meteor.userId()\n\t\t\tthrow new Meteor.Error 'error-invalid-user', 'Invalid user', { method: 'removeRoomOwner' }\n\n\t\tcheck rid, String\n\t\tcheck userId, String\n\n\t\tunless RocketChat.authz.hasPermission Meteor.userId(), 'set-owner', rid\n\t\t\tthrow new Meteor.Error 'error-not-allowed', 'Not allowed', { method: 'removeRoomOwner' }\n\n\t\tsubscription = RocketChat.models.Subscriptions.findOneByRoomIdAndUserId rid, userId\n\t\tunless subscription?\n\t\t\tthrow new Meteor.Error 'error-invalid-room', 'Invalid room', { method: 'removeRoomOwner' }\n\n\t\tnumOwners = RocketChat.authz.getUsersInRole('owner', rid).count()\n\t\tif numOwners is 1\n\t\t\tthrow new Meteor.Error 'error-remove-last-owner', 'This is the last owner. Please set a new owner before removing this one.', { method: 'removeRoomOwner' }\n\n\t\tRocketChat.models.Subscriptions.removeRoleById(subscription._id, 'owner')\n\n\t\tuser = RocketChat.models.Users.findOneById userId\n\t\tfromUser = RocketChat.models.Users.findOneById Meteor.userId()\n\t\tRocketChat.models.Messages.createSubscriptionRoleRemovedWithRoomIdAndUser rid, user,\n\t\t\tu:\n\t\t\t\t_id: fromUser._id\n\t\t\t\tusername: fromUser.username\n\t\t\trole: 'owner'\n\n\t\tif RocketChat.settings.get('UI_DisplayRoles')\n\t\t\tRocketChat.Notifications.notifyAll('roles-change', { type: 'removed', _id: 'owner', u: { _id: user._id, username: user.username }, scope: rid });\n\n\t\treturn true\n"]}