{"version":3,"sources":["meteor://ðŸ’»app/server/methods/addAllUserToRoom.js"],"names":[],"mappings":";;;;;;;;AAAA,MAAM,CAAC,OAAO,CAAC;AACd,iBAAgB,EAAE,UAAS,GAAG,EAAE;AAC/B,MAAI,UAAU,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,OAAO,CAAC,KAAK,IAAI,EAAE;AAC5D,OAAI,GAAG,EAAE,IAAI,EAAE,KAAK,CAAC;AACrB,OAAI,SAAS,GAAG,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,KAAK,EAAE,CAAC;AACvD,OAAI,SAAS,GAAG,UAAU,CAAC,QAAQ,CAAC,GAAG,CAAC,gBAAgB,CAAC,EAAE;AAC1D,UAAM,IAAI,MAAM,CAAC,KAAK,CAAC,2BAA2B,EAAE,qBAAqB,EAAE;AAC1E,WAAM,EAAE,cAAc;KACtB,CAAC,CAAC;IACH;AACD,OAAI,GAAG,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;AAChD,OAAI,IAAI,IAAI,IAAI,EAAE;AACjB,UAAM,IAAI,MAAM,CAAC,KAAK,CAAC,oBAAoB,EAAE,cAAc,EAAE;AAC5D,WAAM,EAAE,cAAc;KACtB,CAAC,CAAC;IACH;AACD,QAAK,GAAG,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,KAAK,EAAE,CAAC;AAC/C,MAAG,GAAG,IAAI,IAAI,EAAE,CAAC;AACjB,QAAK,CAAC,OAAO,CAAC,UAAS,IAAI,EAAE;AAC5B,QAAI,YAAY,CAAC;AACjB,gBAAY,GAAG,UAAU,CAAC,MAAM,CAAC,aAAa,CAAC,wBAAwB,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;AACvF,QAAI,YAAY,IAAI,IAAI,EAAE;AACzB,YAAO;KACP;AACD,cAAU,CAAC,SAAS,CAAC,GAAG,CAAC,gBAAgB,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;AACvD,cAAU,CAAC,MAAM,CAAC,KAAK,CAAC,eAAe,CAAC,GAAG,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;AAC5D,cAAU,CAAC,MAAM,CAAC,aAAa,CAAC,qBAAqB,CAAC,IAAI,EAAE,IAAI,EAAE;AACjE,OAAE,EAAE,GAAG;AACP,SAAI,EAAE,IAAI;AACV,UAAK,EAAE,IAAI;AACX,WAAM,EAAE,CAAC;KACT,CAAC,CAAC;AACH,cAAU,CAAC,MAAM,CAAC,QAAQ,CAAC,+BAA+B,CAAC,GAAG,EAAE,IAAI,EAAE;AACrE,OAAE,EAAE,GAAG;KACP,CAAC,CAAC;AACH,UAAM,CAAC,KAAK,CAAC,YAAW,EAAE,CAAC,CAAC;AAC5B,WAAO,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IAC7D,CAAC,CAAC;AACH,UAAO,IAAI,CAAC;GACZ,MAAM;AACN,SAAO,IAAI,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,4BAA4B,EAAE;AAC1D,UAAM,EAAE,cAAc;IACtB,CAAC,CAAE;GACJ;EACD;CACD,CAAC,CAAC,sE","file":"/server/methods/addAllUserToRoom.js","sourcesContent":["Meteor.methods({\n\taddAllUserToRoom: function(rid) {\n\t\tif (RocketChat.authz.hasRole(this.userId, 'admin') === true) {\n\t\t\tvar now, room, users;\n\t\t\tvar userCount = RocketChat.models.Users.find().count();\n\t\t\tif (userCount > RocketChat.settings.get('API_User_Limit')) {\n\t\t\t\tthrow new Meteor.Error('error-user-limit-exceeded', 'User Limit Exceeded', {\n\t\t\t\t\tmethod: 'addAllToRoom'\n\t\t\t\t});\n\t\t\t}\n\t\t\troom = RocketChat.models.Rooms.findOneById(rid);\n\t\t\tif (room == null) {\n\t\t\t\tthrow new Meteor.Error('error-invalid-room', 'Invalid room', {\n\t\t\t\t\tmethod: 'addAllToRoom'\n\t\t\t\t});\n\t\t\t}\n\t\t\tusers = RocketChat.models.Users.find().fetch();\n\t\t\tnow = new Date();\n\t\t\tusers.forEach(function(user) {\n\t\t\t\tvar subscription;\n\t\t\t\tsubscription = RocketChat.models.Subscriptions.findOneByRoomIdAndUserId(rid, user._id);\n\t\t\t\tif (subscription != null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tRocketChat.callbacks.run('beforeJoinRoom', user, room);\n\t\t\t\tRocketChat.models.Rooms.addUsernameById(rid, user.username);\n\t\t\t\tRocketChat.models.Subscriptions.createWithRoomAndUser(room, user, {\n\t\t\t\t\tts: now,\n\t\t\t\t\topen: true,\n\t\t\t\t\talert: true,\n\t\t\t\t\tunread: 1\n\t\t\t\t});\n\t\t\t\tRocketChat.models.Messages.createUserJoinWithRoomIdAndUser(rid, user, {\n\t\t\t\t\tts: now\n\t\t\t\t});\n\t\t\t\tMeteor.defer(function() {});\n\t\t\t\treturn RocketChat.callbacks.run('afterJoinRoom', user, room);\n\t\t\t});\n\t\t\treturn true;\n\t\t} else {\n\t\t\tthrow (new Meteor.Error(403, 'Access to Method Forbidden', {\n\t\t\t\tmethod: 'addAllToRoom'\n\t\t\t}));\n\t\t}\n\t}\n});\n"]}