{"version":3,"sources":["meteor://ðŸ’»app/server/methods/updateMessage.coffee"],"names":[],"mappings":"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","file":"/server/methods/updateMessage.coffee.js","sourcesContent":["Meteor.methods\n\tupdateMessage: (message) ->\n\t\tif not Meteor.userId()\n\t\t\tthrow new Meteor.Error('error-invalid-user', \"Invalid user\", { method: 'updateMessage' })\n\n\t\toriginalMessage = RocketChat.models.Messages.findOneById message._id\n\n\t\tif not originalMessage?._id?\n\t\t\treturn\n\n\t\thasPermission = RocketChat.authz.hasPermission(Meteor.userId(), 'edit-message', message.rid)\n\t\teditAllowed = RocketChat.settings.get 'Message_AllowEditing'\n\t\teditOwn = originalMessage?.u?._id is Meteor.userId()\n\n\t\tme = RocketChat.models.Users.findOneById Meteor.userId()\n\n\t\tunless hasPermission or (editAllowed and editOwn)\n\t\t\tthrow new Meteor.Error 'error-action-not-allowed', 'Message editing not allowed', { method: 'updateMessage', action: 'Message_editing' }\n\n\t\tblockEditInMinutes = RocketChat.settings.get 'Message_AllowEditing_BlockEditInMinutes'\n\t\tif blockEditInMinutes? and blockEditInMinutes isnt 0\n\t\t\tmsgTs = moment(originalMessage.ts) if originalMessage.ts?\n\t\t\tcurrentTsDiff = moment().diff(msgTs, 'minutes') if msgTs?\n\t\t\tif currentTsDiff > blockEditInMinutes\n\t\t\t\tthrow new Meteor.Error 'error-message-editing-blocked', 'Message editing is blocked', { method: 'updateMessage' }\n\n\t\t# If we keep history of edits, insert a new message to store history information\n\t\tif RocketChat.settings.get 'Message_KeepHistory'\n\t\t\tRocketChat.models.Messages.cloneAndSaveAsHistoryById originalMessage._id\n\n\t\tmessage.editedAt = new Date()\n\t\tmessage.editedBy =\n\t\t\t_id: Meteor.userId()\n\t\t\tusername: me.username\n\n\t\tif urls = message.msg.match /([A-Za-z]{3,9}):\\/\\/([-;:&=\\+\\$,\\w]+@{1})?([-A-Za-z0-9\\.]+)+:?(\\d+)?((\\/[-\\+=!:~%\\/\\.@\\,\\w]*)?\\??([-\\+=&!:;%@\\/\\.\\,\\w]+)?(?:#([^\\s\\)]+))?)?/g\n\t\t\tmessage.urls = urls.map (url) -> url: url\n\n\t\tmessage = RocketChat.callbacks.run 'beforeSaveMessage', message\n\n\t\ttempid = message._id\n\t\tdelete message._id\n\n\t\tRocketChat.models.Messages.update\n\t\t\t_id: tempid\n\t\t,\n\t\t\t$set: message\n\n\t\troom = RocketChat.models.Rooms.findOneById message.rid\n\n\t\tMeteor.defer ->\n\t\t\tRocketChat.callbacks.run 'afterSaveMessage', RocketChat.models.Messages.findOneById(tempid), room\n"]}