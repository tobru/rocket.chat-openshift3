{"version":3,"sources":["meteor://ğŸ’»app/server/methods/setAvatarFromService.coffee"],"names":[],"mappings":"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","file":"/server/methods/setAvatarFromService.coffee.js","sourcesContent":["Meteor.methods\n\tsetAvatarFromService: (dataURI, contentType, service) ->\n\t\tunless Meteor.userId()\n\t\t\tthrow new Meteor.Error('error-invalid-user', \"Invalid user\", { method: 'setAvatarFromService' })\n\n\t\tunless RocketChat.settings.get(\"Accounts_AllowUserAvatarChange\")\n\t\t\tthrow new Meteor.Error('error-not-allowed', 'Not allowed', { method: 'setAvatarFromService' });\n\n\t\tuser = Meteor.user()\n\n\t\tif service is 'initials'\n\t\t\tRocketChat.models.Users.setAvatarOrigin user._id, service\n\t\t\treturn\n\n\t\tif service is 'url'\n\t\t\tresult = null\n\n\t\t\ttry\n\t\t\t\tresult = HTTP.get dataURI, npmRequestOptions: {encoding: 'binary'}\n\t\t\tcatch e\n\t\t\t\tconsole.log \"Error while handling the setting of the avatar from a url (#{dataURI}) for #{user.username}:\", e\n\t\t\t\tthrow new Meteor.Error('error-avatar-url-handling', 'Error while handling avatar setting from a URL ('+ dataURI +') for ' + user.username, { method: 'setAvatarFromService', url: dataURI, username: user.username });\n\n\t\t\tif result.statusCode isnt 200\n\t\t\t\tconsole.log \"Not a valid response, #{result.statusCode}, from the avatar url: #{dataURI}\"\n\t\t\t\tthrow new Meteor.Error('error-avatar-invalid-url', 'Invalid avatar URL: ' +  dataURI, { method: 'setAvatarFromService', url: dataURI })\n\n\t\t\tif not /image\\/.+/.test result.headers['content-type']\n\t\t\t\tconsole.log \"Not a valid content-type from the provided url, #{result.headers['content-type']}, from the avatar url: #{dataURI}\"\n\t\t\t\tthrow new Meteor.Error('error-avatar-invalid-url', 'Invalid avatar URL: ' +  dataURI, { method: 'setAvatarFromService', url: dataURI })\n\n\t\t\tars = RocketChatFile.bufferToStream new Buffer(result.content, 'binary')\n\t\t\tRocketChatFileAvatarInstance.deleteFile encodeURIComponent(\"#{user.username}.jpg\")\n\t\t\taws = RocketChatFileAvatarInstance.createWriteStream encodeURIComponent(\"#{user.username}.jpg\"), result.headers['content-type']\n\t\t\taws.on 'end', Meteor.bindEnvironment ->\n\t\t\t\tMeteor.setTimeout ->\n\t\t\t\t\tconsole.log \"Set #{user.username}'s avatar from the url: #{dataURI}\"\n\t\t\t\t\tRocketChat.models.Users.setAvatarOrigin user._id, service\n\t\t\t\t\tRocketChat.Notifications.notifyAll 'updateAvatar', { username: user.username }\n\t\t\t\t, 500\n\n\t\t\tars.pipe(aws)\n\t\t\treturn\n\n\t\t{image, contentType} = RocketChatFile.dataURIParse dataURI\n\n\t\trs = RocketChatFile.bufferToStream new Buffer(image, 'base64')\n\t\tRocketChatFileAvatarInstance.deleteFile encodeURIComponent(\"#{user.username}.jpg\")\n\t\tws = RocketChatFileAvatarInstance.createWriteStream encodeURIComponent(\"#{user.username}.jpg\"), contentType\n\t\tws.on 'end', Meteor.bindEnvironment ->\n\t\t\tMeteor.setTimeout ->\n\t\t\t\tRocketChat.models.Users.setAvatarOrigin user._id, service\n\t\t\t\tRocketChat.Notifications.notifyAll 'updateAvatar', {username: user.username}\n\t\t\t, 500\n\n\t\trs.pipe(ws)\n\t\treturn\n\nDDPRateLimiter.addRule\n\ttype: 'method'\n\tname: 'setAvatarFromService'\n\tuserId: -> return true\n, 1, 5000\n"]}