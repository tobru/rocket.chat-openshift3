{"version":3,"sources":["meteor://ðŸ’»app/server/methods/messageSearch.coffee"],"names":[],"mappings":"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","file":"/server/methods/messageSearch.coffee.js","sourcesContent":["Meteor.methods\n\tmessageSearch: (text, rid, limit) ->\n\t\tif not Meteor.userId()\n\t\t\tthrow new Meteor.Error 'error-invalid-user', 'Invalid user', { method: 'messageSearch' }\n\n\t\t###\n\t\t\ttext = 'from:rodrigo mention:gabriel chat'\n\t\t###\n\n\t\tresult =\n\t\t\tmessages: []\n\t\t\tusers: []\n\t\t\tchannels: []\n\n\t\tquery = {}\n\t\toptions =\n\t\t\tsort:\n\t\t\t\tts: -1\n\t\t\tlimit: limit or 20\n\n\t\t# Query for senders\n\t\tfrom = []\n\t\ttext = text.replace /from:([a-z0-9.-_]+)/ig, (match, username, index) ->\n\t\t\tfrom.push username\n\t\t\treturn ''\n\n\t\tif from.length > 0\n\t\t\tquery['u.username'] =\n\t\t\t\t$regex: from.join('|')\n\t\t\t\t$options: 'i'\n\n\n\t\t# Query for mentions\n\t\tmention = []\n\t\ttext = text.replace /mention:([a-z0-9.-_]+)/ig, (match, username, index) ->\n\t\t\tmention.push username\n\t\t\treturn ''\n\n\t\tif mention.length > 0\n\t\t\tquery['mentions.username'] =\n\t\t\t\t$regex: mention.join('|')\n\t\t\t\t$options: 'i'\n\n\n\t\t# Query in message text\n\t\ttext = text.trim().replace(/\\s\\s/g, ' ')\n\t\tif text isnt ''\n\t\t\t# Regex search\n\t\t\tif /^\\/.+\\/[imxs]*$/.test text\n\t\t\t\tr = text.split('/')\n\t\t\t\tquery.msg =\n\t\t\t\t\t$regex: r[1]\n\t\t\t\t\t$options: r[2]\n\t\t\telse if RocketChat.settings.get 'Message_AlwaysSearchRegExp'\n\t\t\t\tquery.msg =\n\t\t\t\t\t$regex: text\n\t\t\t\t\t$options: 'i'\n\t\t\telse\n\t\t\t\tquery.$text =\n\t\t\t\t\t$search: text\n\t\t\t\toptions.fields =\n\t\t\t\t\tscore:\n\t\t\t\t\t\t$meta: \"textScore\"\n\n\t\t\t# options.sort =\n\t\t\t# \tscore:\n\t\t\t# \t\t$meta: 'textScore'\n\n\t\tif Object.keys(query).length > 0\n\t\t\tquery.t = { $ne: 'rm' } # hide removed messages (userful when searching for user messages)\n\t\t\tquery._hidden = { $ne: true } # don't return _hidden messages\n\n\t\t\t# Filter by room\n\t\t\tif rid?\n\t\t\t\tquery.rid = rid\n\t\t\t\ttry\n\t\t\t\t\tif Meteor.call('canAccessRoom', rid, this.userId) isnt false\n\t\t\t\t\t\tif not RocketChat.settings.get 'Message_ShowEditedStatus'\n\t\t\t\t\t\t\toptions.fields = { 'editedAt': 0 }\n\t\t\t\t\t\tresult.messages = RocketChat.models.Messages.find(query, options).fetch()\n\n\n\t\t# make sure we don't return more than limit results\n\t\t# limit -= result.messages?.length\n\n\t\t# ###\n\t\t# # USERS\n\t\t# ###\n\t\t# if from.length is 0 and mention.length is 0 and text isnt ''\n\t\t# \tquery =\n\t\t# \t\tusername:\n\t\t# \t\t\t$regex: text\n\t\t# \t\t\t$options: 'i'\n\n\t\t# \toptions =\n\t\t# \t\tlimit: 5\n\t\t# \t\tsort:\n\t\t# \t\t\tusername: 1\n\t\t# \t\tfields:\n\t\t# \t\t\tusername: 1\n\t\t# \t\t\tname: 1\n\t\t# \t\t\tstatus: 1\n\t\t# \t\t\tutcOffset: 1\n\n\t\t# \tresult.users = Meteor.users.find(query, options).fetch()\n\n\n\t\t# ###\n\t\t# # CHANNELS\n\t\t# ###\n\t\t# if from.length is 0 and mention.length is 0 and text isnt ''\n\t\t# \tquery =\n\t\t# \t\tt: 'c'\n\t\t# \t\tname:\n\t\t# \t\t\t$regex: text\n\t\t# \t\t\t$options: 'i'\n\n\t\t# \toptions =\n\t\t# \t\tlimit: 5\n\t\t# \t\tsort:\n\t\t# \t\t\tname: 1\n\t\t# \t\tfields:\n\t\t# \t\t\tusername: 1\n\t\t# \t\t\tname: 1\n\t\t# \t\t\tstatus: 1\n\t\t# \t\t\tutcOffset: 1\n\n\t\t# \tresult.channels = ChatRoom.find(query, options).fetch()\n\n\t\treturn result\n"]}