{"version":3,"sources":["meteor://ðŸ’»app/server/methods/muteUserInRoom.coffee"],"names":[],"mappings":";;;;;;;;;AAAA;;AAAA,MAAM,CAAC,OAAP,CACC;AAAA,kBAAgB,SAAC,IAAD;AACf;AAAA,QAAG,OAAU,CAAC,MAAP,EAAP;AACC,YAAU,UAAM,CAAC,KAAP,CAAa,oBAAb,EAAmC,cAAnC,EAAmD;AAAA,QAAE,QAAQ,gBAAV;OAAnD,CAAV,CADD;KAAA;AAAA,IAGA,SAAS,MAAM,CAAC,MAAP,EAHT;AAAA,IAIA,MAAM,IAAN,EAAY,KAAK,CAAC,eAAN,CAAsB;AAAA,MAAE,KAAK,MAAP;AAAA,MAAe,UAAU,MAAzB;KAAtB,CAAZ,CAJA;AAMA,mBAAiB,CAAC,KAAK,CAAC,aAAjB,CAA+B,MAA/B,EAAuC,WAAvC,EAAoD,IAAI,CAAC,GAAzD,CAAP;AACC,YAAU,UAAM,CAAC,KAAP,CAAa,mBAAb,EAAkC,aAAlC,EAAiD;AAAA,QAAE,QAAQ,gBAAV;OAAjD,CAAV,CADD;KANA;AAAA,IASA,OAAO,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,WAAxB,CAAoC,IAAI,CAAC,GAAzC,CATP;AAUA,QAAG,KAAH;AACC,YAAU,UAAM,CAAC,KAAP,CAAa,oBAAb,EAAmC,cAAnC,EAAmD;AAAA,QAAE,QAAQ,gBAAV;OAAnD,CAAV,CADD;KAVA;AAaA,eAAG,IAAI,CAAC,EAAL,KAAe,GAAf,YAAoB,GAAvB;AACC,YAAU,UAAM,CAAC,KAAP,CAAa,yBAAb,EAAwC,IAAI,CAAC,CAAL,GAAS,2BAAjD,EAA8E;AAAA,QAAE,QAAQ,gBAAV;AAAA,QAA4B,MAAM,IAAI,CAAC,CAAvC;OAA9E,CAAV,CADD;KAbA;AAgBA,eAAG,IAAI,CAAC,QAAL,+BAAsB,IAAI,CAAE,mBAAN,IAAmB,EAAzC,WAAH;AACC,YAAU,UAAM,CAAC,KAAP,CAAa,wBAAb,EAAuC,0BAAvC,EAAmE;AAAA,QAAE,QAAQ,gBAAV;OAAnE,CAAV,CADD;KAhBA;AAAA,IAmBA,YAAY,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,iBAAxB,CAA0C,IAAI,CAAC,QAA/C,CAnBZ;AAAA,IAqBA,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,oBAAxB,CAA6C,IAAI,CAAC,GAAlD,EAAuD,SAAS,CAAC,QAAjE,CArBA;AAAA,IAuBA,WAAW,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,WAAxB,CAAoC,MAApC,CAvBX;AAAA,IAwBA,UAAU,CAAC,MAAM,CAAC,QAAQ,CAAC,gCAA3B,CAA4D,IAAI,CAAC,GAAjE,EAAsE,SAAtE,EACC;AAAA,SACC;AAAA,aAAK,QAAQ,CAAC,GAAd;AAAA,QACA,UAAU,QAAQ,CAAC,QADnB;OADD;KADD,CAxBA;AA6BA,WAAO,IAAP,CA9Be;EAAA,CAAhB;CADD","file":"/server/methods/muteUserInRoom.coffee.js","sourcesContent":["Meteor.methods\n\tmuteUserInRoom: (data) ->\n\t\tif not Meteor.userId()\n\t\t\tthrow new Meteor.Error 'error-invalid-user', 'Invalid user', { method: 'muteUserInRoom' }\n\n\t\tfromId = Meteor.userId()\n\t\tcheck(data, Match.ObjectIncluding({ rid: String, username: String }))\n\n\t\tunless RocketChat.authz.hasPermission(fromId, 'mute-user', data.rid)\n\t\t\tthrow new Meteor.Error 'error-not-allowed', 'Not allowed', { method: 'muteUserInRoom' }\n\n\t\troom = RocketChat.models.Rooms.findOneById data.rid\n\t\tif not room\n\t\t\tthrow new Meteor.Error 'error-invalid-room', 'Invalid room', { method: 'muteUserInRoom' }\n\n\t\tif room.t not in ['c', 'p']\n\t\t\tthrow new Meteor.Error 'error-invalid-room-type', room.t + ' is not a valid room type', { method: 'muteUserInRoom', type: room.t }\n\n\t\tif data.username not in (room?.usernames or [])\n\t\t\tthrow new Meteor.Error 'error-user-not-in-room', 'User is not in this room', { method: 'muteUserInRoom' }\n\n\t\tmutedUser = RocketChat.models.Users.findOneByUsername data.username\n\n\t\tRocketChat.models.Rooms.muteUsernameByRoomId data.rid, mutedUser.username\n\n\t\tfromUser = RocketChat.models.Users.findOneById fromId\n\t\tRocketChat.models.Messages.createUserMutedWithRoomIdAndUser data.rid, mutedUser,\n\t\t\tu:\n\t\t\t\t_id: fromUser._id\n\t\t\t\tusername: fromUser.username\n\n\t\treturn true\n"]}