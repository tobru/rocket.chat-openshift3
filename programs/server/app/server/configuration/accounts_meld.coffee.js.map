{"version":3,"sources":["meteor://ðŸ’»app/server/configuration/accounts_meld.coffee"],"names":[],"mappings":";;;;;;;;;AAAA;;AAAA,6CAA6C,QAAQ,CAAC,qCAAtD;;AAAA,QACQ,CAAC,qCAAT,GAAiD,SAAC,WAAD,EAAc,WAAd,EAA2B,OAA3B;AAEhD;AAAA,MAAG,iBAAoB,UAApB,oBAAgC,QAAhC,oBAA0C,QAA1C,oBAAoD,QAApD,oBAA8D,kBAA9D,oBAAkF,UAAlF,oBAA8F,SAA9F,oBAAyG,WAAzG,KAA0H,WAAW,CAAC,YAAZ,KAA8B,IAA3J;AACC,WADD;GAAA;AAGA,MAAG,gBAAe,kBAAlB;AACC,QAAG,CAAC,CAAC,OAAF,uBAAU,WAAW,CAAE,eAAvB,CAAH;AACC,iBAAW,CAAC,MAAM,CAAC,IAAnB,CAAwB,SAAC,CAAD,EAAI,CAAJ;AACvB,eAAO,CAAC,CAAC,OAAF,KAAe,IAAtB,CADuB;MAAA,CAAxB;AAGA;AAAA;uBAAA;AACC,YAAG,KAAK,CAAC,QAAN,KAAkB,IAArB;AACC,qBAAW,CAAC,KAAZ,GAAoB,KAAK,CAAC,OAA1B;AACA,gBAFD;SADD;AAAA,OAJD;KADD;GAHA;AAaA,MAAG,gBAAe,UAAlB;AACC,eAAW,CAAC,KAAZ,GAAoB,WAAW,CAAC,YAAhC,CADD;GAbA;AAgBA,MAAG,WAAW,CAAC,KAAf;AAGC,WAAO,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,qBAAxB,CAA8C,WAAW,CAAC,KAA1D,CAAP;AACA,QAAG,YAAH;AAEC,UAAG,EAAK,CAAC,SAAF,CAAY,IAAI,CAAC,MAAjB,EAAyB;AAAA,QAAE,SAAS,WAAW,CAAC,KAAvB;AAAA,QAA8B,UAAU,IAAxC;OAAzB,CAAP;AACC,kBAAU,CAAC,MAAM,CAAC,KAAK,CAAC,wCAAxB,CAAiE,IAAI,CAAC,GAAtE,EAA2E,IAA3E,EAAiF,yFAAjF,EADD;OAAA;AAAA,MAIA,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,YAAxB,CAAqC,IAAI,CAAC,GAA1C,EAA+C,WAA/C,EAA4D,WAAW,CAAC,EAAxE,CAJA;AAAA,MAOA,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,gBAAxB,CAAyC,IAAI,CAAC,GAA9C,EAAmD,WAAW,CAAC,KAA/D,CAPA,CAFD;KAJD;GAhBA;AA+BA,SAAO,0CAA0C,CAAC,KAA3C,CAAiD,IAAjD,EAAuD,SAAvD,CAAP,CAjCgD;AAAA,CADjD","file":"/server/configuration/accounts_meld.coffee.js","sourcesContent":["orig_updateOrCreateUserFromExternalService = Accounts.updateOrCreateUserFromExternalService\nAccounts.updateOrCreateUserFromExternalService = (serviceName, serviceData, options) ->\n\n\tif serviceName not in ['facebook', 'github', 'gitlab', 'google', 'meteor-developer', 'linkedin', 'twitter', 'sandstorm'] and serviceData._OAuthCustom isnt true\n\t\treturn\n\n\tif serviceName is 'meteor-developer'\n\t\tif _.isArray serviceData?.emails\n\t\t\tserviceData.emails.sort (a, b) ->\n\t\t\t\treturn a.primary isnt true\n\n\t\t\tfor email in serviceData.emails\n\t\t\t\tif email.verified is true\n\t\t\t\t\tserviceData.email = email.address\n\t\t\t\t\tbreak\n\n\tif serviceName is 'linkedin'\n\t\tserviceData.email = serviceData.emailAddress\n\n\tif serviceData.email\n\n\t\t# Find user with given email\n\t\tuser = RocketChat.models.Users.findOneByEmailAddress serviceData.email\n\t\tif user?\n\t\t\t# If email is not verified, reset password and require password change\n\t\t\tif not _.findWhere user.emails, { address: serviceData.email, verified: true }\n\t\t\t\tRocketChat.models.Users.resetPasswordAndSetRequirePasswordChange(user._id, true, 'This_email_has_already_been_used_and_has_not_been_verified__Please_change_your_password')\n\n\t\t\t# Merge accounts\n\t\t\tRocketChat.models.Users.setServiceId user._id, serviceName, serviceData.id\n\n\t\t\t# Validate email\n\t\t\tRocketChat.models.Users.setEmailVerified user._id, serviceData.email\n\n\treturn orig_updateOrCreateUserFromExternalService.apply(this, arguments)\n"]}