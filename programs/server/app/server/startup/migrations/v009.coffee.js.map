{"version":3,"sources":["meteor://ðŸ’»app/server/startup/migrations/v009.coffee"],"names":[],"mappings":";;;;;;;;;AAAA,UAAU,CAAC,UAAU,CAAC,GAAtB,CACC;AAAA,WAAS,CAAT;AAAA,EACA,IAAI;AAIH;AAAA,gBAAY;MACX;AAAA,QACC,QAAY,UAAM,CAAC,UAAP,CAAkB,eAAlB,CADb;AAAA,QAEC,QAAQ,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,KAFjC;OADW,EAKX;AAAA,QACC,QAAY,UAAM,CAAC,UAAP,CAAkB,uBAAlB,CADb;AAAA,QAEC,QAAQ,UAAU,CAAC,MAAM,CAAC,aAAa,CAAC,KAFzC;OALW,EASX;AAAA,QACC,QAAY,UAAM,CAAC,UAAP,CAAkB,kBAAlB,CADb;AAAA,QAEC,QAAQ,UAAU,CAAC,MAAM,CAAC,QAAQ,CAAC,KAFpC;OATW,EAaX;AAAA,QACC,QAAY,UAAM,CAAC,UAAP,CAAkB,UAAlB,CADb;AAAA,QAEC,QAAQ,QAFT;OAbW,EAiBX;AAAA,QAEC,QAAY,UAAM,CAAC,UAAP,CAAkB,cAAlB,CAFb;AAAA,QAGC,QAAQ,MAAM,CAAC,KAHhB;OAjBW;KAAZ;WAwBA,SAAS,CAAC,OAAV,CAAkB,SAAE,UAAF;AACjB;AAAA,eAAS,UAAU,CAAC,MAApB;AAAA,MACA,SAAS,UAAU,CAAC,MADpB;AAAA,MAIA,OAAO,CAAC,GAAR,CAAY,0BAA0B,MAAM,CAAC,aAAP,EAAsB,CAAC,cAAjD,GAAkE,OAAlE,GAA4E,MAAM,CAAC,aAAP,EAAsB,CAAC,cAA/G,CAJA;AAAA,MAKA,MAAM,CAAC,IAAP,EAAa,CAAC,OAAd,CAAsB,SAAE,GAAF;eAErB,MAAM,CAAC,MAAP,CAAc;AAAA,UAAC,KAAK,GAAG,CAAC,GAAV;SAAd,EAA8B,GAA9B,EAFqB;MAAA,CAAtB,CALA;AAAA,MASA,YAAY,MAAM,CAAC,aAAP,EATZ;aAWA,MAAM,CAAC,SAAP,CAAiB,SAAS,CAAC,IAA3B,EAAiC,SAAjC,EAA6C,SAAC,GAAD,EAAK,GAAL;AAC5C,YAAG,GAAH;iBACC,OAAO,CAAC,GAAR,CAAY,oBAAqB,SAAS,CAAC,cAA/B,GAAgD,sBAAhD,GAAyE,GAAG,CAAC,MAAzF,EADD;SAD4C;MAAA,CAA7C,EAZiB;IAAA,CAAlB,EA5BG;EAAA,CADJ;CADD","file":"/server/startup/migrations/v009.coffee.js","sourcesContent":["RocketChat.Migrations.add\n\tversion: 9\n\tup: ->\n\t\t# Migrate existing source collection data to target collection\n\t\t# target collection is defined in collections.coffee using the new collection name\n\t\t# source collection is dropped after data migration\n\t\ttoMigrate = [\n\t\t\t{\n\t\t\t\tsource: new Meteor.Collection 'data.ChatRoom'\n\t\t\t\ttarget: RocketChat.models.Rooms.model\n\t\t\t}\n\t\t\t{\n\t\t\t\tsource: new Meteor.Collection 'data.ChatSubscription'\n\t\t\t\ttarget: RocketChat.models.Subscriptions.model\n\t\t\t}\n\t\t\t{\n\t\t\t\tsource: new Meteor.Collection 'data.ChatMessage'\n\t\t\t\ttarget: RocketChat.models.Messages.model\n\t\t\t}\n\t\t\t{\n\t\t\t\tsource: new Meteor.Collection 'settings'\n\t\t\t\ttarget: Settings\n\t\t\t}\n\t\t\t{\n\t\t\t\t# this collection may not exit\n\t\t\t\tsource: new Meteor.Collection 'oembed_cache'\n\t\t\t\ttarget: OEmbed.cache\n\t\t\t}\n\t\t]\n\n\t\ttoMigrate.forEach ( collection ) ->\n\t\t\tsource = collection.source\n\t\t\ttarget = collection.target\n\n\t\t\t# rawCollection available as of Meteor 1.0.4\n\t\t\tconsole.log 'Migrating data from: ' + source.rawCollection().collectionName + ' to: ' + target.rawCollection().collectionName\n\t\t\tsource.find().forEach ( doc ) ->\n\t\t\t\t# use upsert to account for GENERAL room created by initialData\n\t\t\t\ttarget.upsert({_id: doc._id}, doc )\n\n\t\t\trawSource = source.rawCollection()\n\t\t\t# drop old collection\n\t\t\tMeteor.wrapAsync(rawSource.drop, rawSource )((err,res) ->\n\t\t\t\tif err\n\t\t\t\t\tconsole.log 'Error dropping '  + rawSource.collectionName + ' collection due to: ' + err.errmsg\n\t\t\t)\n\n\t\t\t# Note: the following would have been much easier, but didn't work.  The serverside\n\t\t\t# data was not published to the client for some reason.\n\t\t\t# newName = target.rawCollection().collectionName\n\t\t\t# Meteor.wrapAsync(rawSource.rename, rawSource )(newName, {dropTarget:true})\n\n"]}