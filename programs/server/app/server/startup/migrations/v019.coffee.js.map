{"version":3,"sources":["meteor://ðŸ’»app/server/startup/migrations/v019.coffee"],"names":[],"mappings":";;;;;;;;;AAAA,UAAU,CAAC,UAAU,CAAC,GAAtB,CACC;AAAA,WAAS,EAAT;AAAA,EACA,IAAI;AACH;AAAA;;;OAAA;AAAA;AAAA,IAIA,SAAS,MAAM,CAAC,KAAK,CAAC,IAAb,CAAkB;AAAA,MAAE,OAAO,IAAT;KAAlB,EAAmC;AAAA,MAAE,QAAQ;AAAA,QAAE,KAAK,CAAP;AAAA,QAAU,UAAS,CAAnB;OAAV;KAAnC,CAAsE,CAAC,KAAvE,EAJT;AAAA,IAKA,UAAU,CAAC,KAAK,CAAC,eAAjB,CAAkC,CAAC,CAAC,KAAF,CAAQ,MAAR,EAAgB,KAAhB,CAAlC,EAA0D,CAAC,OAAD,CAA1D,CALA;AAAA,IAMA,MAAM,CAAC,KAAK,CAAC,MAAb,CAAoB,EAApB,EAAwB;AAAA,MAAE,QAAQ;AAAA,QAAC,OAAM,EAAP;OAAV;KAAxB,EAA+C;AAAA,MAAC,OAAM,IAAP;KAA/C,CANA;AAAA,IAOA,YAAY,CAAC,CAAC,KAAF,CAAS,MAAT,EAAiB,UAAjB,CAA4B,CAAC,IAA7B,CAAkC,IAAlC,CAPZ;AAAA,IAQA,OAAO,CAAC,GAAR,CAAY,cAAW,SAAX,GAAqB,mCAArB,CAAuD,CAAC,KAApE,CARA;AAAA,IAWA,QAAQ,MAAM,CAAC,KAAK,CAAC,IAAb,EAAmB,CAAC,KAApB,EAXR;AAAA,IAYA,UAAU,CAAC,KAAK,CAAC,eAAjB,CAAkC,CAAC,CAAC,KAAF,CAAQ,KAAR,EAAe,KAAf,CAAlC,EAAyD,CAAC,MAAD,CAAzD,CAZA;AAAA,IAaA,YAAY,CAAC,CAAC,KAAF,CAAS,KAAT,EAAgB,UAAhB,CAA2B,CAAC,IAA5B,CAAiC,IAAjC,CAbZ;AAAA,IAcA,OAAO,CAAC,GAAR,CAAY,UAAO,SAAP,GAAiB,iBAAjB,CAAiC,CAAC,KAA9C,CAdA;AAAA,IAiBA,QAAQ,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,WAAxB,CAAoC,CAAC,GAAD,EAAK,GAAL,CAApC,CAA8C,CAAC,KAA/C,EAjBR;WAkBA,CAAC,CAAC,IAAF,CAAO,KAAP,EAAc,SAAC,IAAD;AACb;AAAA,2DAAiB,CAAE,qBAAnB;AACA,UAAG,OAAH;AACC,YAAG,MAAM,CAAC,KAAK,CAAC,OAAb,CAAqB;AAAA,UAAC,KAAK,OAAN;SAArB,CAAH;iBACC,UAAU,CAAC,KAAK,CAAC,eAAjB,CAAkC,OAAlC,EAA2C,CAAC,WAAD,CAA3C,EAA0D,IAAI,CAAC,GAA/D,EADD;SAAA;AAGC,oBAAU,CAAC,MAAM,CAAC,aAAa,CAAC,cAAhC,CAA+C,IAAI,CAAC,GAApD;AAAA,UACA,UAAU,CAAC,MAAM,CAAC,QAAQ,CAAC,cAA3B,CAA0C,IAAI,CAAC,GAA/C,CADA;iBAEA,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,UAAxB,CAAmC,IAAI,CAAC,GAAxC,EALD;SADD;OAFa;IAAA,CAAd,EAnBG;EAAA,CADJ;CADD","file":"/server/startup/migrations/v019.coffee.js","sourcesContent":["RocketChat.Migrations.add\n\tversion: 19\n\tup: ->\n\t\t###\n\t\t# Migrate existing admin users to Role based admin functionality\n\t\t# 'admin' role applies to global scope\n\t\t###\n\t\tadmins = Meteor.users.find({ admin: true }, { fields: { _id: 1, username:1 } }).fetch()\n\t\tRocketChat.authz.addUsersToRoles( _.pluck(admins, '_id'), ['admin'])\n\t\tMeteor.users.update({}, { $unset :{admin:''}}, {multi:true})\n\t\tusernames = _.pluck( admins, 'username').join(', ')\n\t\tconsole.log \"Migrate #{usernames} from admin field to 'admin' role\".green\n\n\t\t# Add 'user' role to all users\n\t\tusers = Meteor.users.find().fetch()\n\t\tRocketChat.authz.addUsersToRoles( _.pluck(users, '_id'), ['user'])\n\t\tusernames = _.pluck( users, 'username').join(', ')\n\t\tconsole.log \"Add #{usernames} to 'user' role\".green\n\n\t\t# Add 'moderator' role to channel/group creators\n\t\trooms = RocketChat.models.Rooms.findByTypes(['c','p']).fetch()\n\t\t_.each rooms, (room) ->\n\t\t\tcreator = room?.u?._id\n\t\t\tif creator\n\t\t\t\tif Meteor.users.findOne({_id: creator})\n\t\t\t\t\tRocketChat.authz.addUsersToRoles( creator, ['moderator'], room._id)\n\t\t\t\telse\n\t\t\t\t\tRocketChat.models.Subscriptions.removeByRoomId room._id\n\t\t\t\t\tRocketChat.models.Messages.removeByRoomId room._id\n\t\t\t\t\tRocketChat.models.Rooms.removeById room._id\n"]}