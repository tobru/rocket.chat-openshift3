{"version":3,"sources":["meteor://ðŸ’»app/server/lib/accounts.coffee"],"names":[],"mappings":"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","file":"/server/lib/accounts.coffee.js","sourcesContent":["# Deny Account.createUser in client and set Meteor.loginTokenExpires\naccountsConfig = { forbidClientAccountCreation: true, loginExpirationInDays: RocketChat.settings.get 'Accounts_LoginExpiration' }\nAccounts.config accountsConfig\n\nAccounts.emailTemplates.siteName = RocketChat.settings.get 'Site_Name';\nAccounts.emailTemplates.from = \"#{RocketChat.settings.get 'Site_Name'} <#{RocketChat.settings.get 'From_Email'}>\";\n\nverifyEmailHtml = Accounts.emailTemplates.verifyEmail.text\nAccounts.emailTemplates.verifyEmail.html = (user, url) ->\n\turl = url.replace Meteor.absoluteUrl(), Meteor.absoluteUrl() + 'login/'\n\tverifyEmailHtml user, url\n\nresetPasswordHtml = Accounts.emailTemplates.resetPassword.text\nAccounts.emailTemplates.resetPassword.html = (user, url) ->\n\turl = url.replace /\\/#\\//, '/'\n\tresetPasswordHtml user, url\n\nAccounts.emailTemplates.enrollAccount.subject = (user) ->\n\tif RocketChat.settings.get 'Accounts_Enrollment_Customized'\n\t\tsubject = RocketChat.settings.get 'Accounts_Enrollment_Email_Subject'\n\telse\n\t\tsubject = TAPi18n.__('Accounts_Enrollment_Email_Subject_Default', { lng: user?.language || RocketChat.settings.get('language') || 'en' })\n\n\treturn RocketChat.placeholders.replace(subject);\n\nAccounts.emailTemplates.enrollAccount.html = (user, url) ->\n\n\tif RocketChat.settings.get 'Accounts_Enrollment_Customized'\n\t\thtml = RocketChat.settings.get 'Accounts_Enrollment_Email'\n\telse\n\t\thtml = TAPi18n.__('Accounts_Enrollment_Email_Default', { lng: user?.language || RocketChat.settings.get('language') || 'en' })\n\n\theader = RocketChat.placeholders.replace(RocketChat.settings.get('Email_Header') || \"\")\n\tfooter = RocketChat.placeholders.replace(RocketChat.settings.get('Email_Footer') || \"\")\n\thtml = RocketChat.placeholders.replace(html, {\n\t\tname: user.name,\n\t\temail: user.emails?[0]?.address\n\t});\n\n\treturn header + html + footer;\n\nAccounts.onCreateUser (options, user) ->\n\t# console.log 'onCreateUser ->',JSON.stringify arguments, null, '  '\n\t# console.log 'options ->',JSON.stringify options, null, '  '\n\t# console.log 'user ->',JSON.stringify user, null, '  '\n\n\tRocketChat.callbacks.run 'beforeCreateUser', options, user\n\n\tuser.status = 'offline'\n\tuser.active = not RocketChat.settings.get 'Accounts_ManuallyApproveNewUsers'\n\n\tif not user?.name? or user.name is ''\n\t\tif options.profile?.name?\n\t\t\tuser.name = options.profile?.name\n\n\tif user.services?\n\t\tfor serviceName, service of user.services\n\t\t\tif not user?.name? or user.name is ''\n\t\t\t\tif service.name?\n\t\t\t\t\tuser.name = service.name\n\t\t\t\telse if service.username?\n\t\t\t\t\tuser.name = service.username\n\n\t\t\tif not user.emails? and service.email?\n\t\t\t\tuser.emails = [\n\t\t\t\t\taddress: service.email\n\t\t\t\t\tverified: true\n\t\t\t\t]\n\n\treturn user\n\n# Wrap insertUserDoc to allow executing code after Accounts.insertUserDoc is run\nAccounts.insertUserDoc = _.wrap Accounts.insertUserDoc, (insertUserDoc, options, user) ->\n\troles = []\n\tif Match.test(user.globalRoles, [String]) and user.globalRoles.length > 0\n\t\troles = roles.concat user.globalRoles\n\n\tdelete user.globalRoles\n\n\tuser.type ?= 'user'\n\n\t_id = insertUserDoc.call(Accounts, options, user)\n\n\tif roles.length is 0\n\t\t# when inserting first user give them admin privileges otherwise make a regular user\n\t\thasAdmin = RocketChat.models.Users.findOne({ roles: 'admin' }, {fields: {_id: 1}})\n\t\tif hasAdmin?\n\t\t\troles.push 'user'\n\t\telse\n\t\t\troles.push 'admin'\n\n\tRocketChat.authz.addUserRoles(_id, roles)\n\n\tMeteor.defer ->\n\t\tRocketChat.callbacks.run 'afterCreateUser', options, user\n\n\treturn _id\n\nAccounts.validateLoginAttempt (login) ->\n\tlogin = RocketChat.callbacks.run 'beforeValidateLogin', login\n\n\tif login.allowed isnt true\n\t\treturn login.allowed\n\n\t# bypass for livechat users\n\tif login.user.type is 'visitor'\n\t\treturn true\n\n\tif !!login.user?.active isnt true\n\t\tthrow new Meteor.Error 'error-user-is-not-activated', 'User is not activated', { function: 'Accounts.validateLoginAttempt' }\n\t\treturn false\n\n\t# If user is admin, no need to check if email is verified\n\tif 'admin' not in login.user?.roles and login.type is 'password' and RocketChat.settings.get('Accounts_EmailVerification') is true\n\t\tvalidEmail = login.user.emails.filter (email) ->\n\t\t\treturn email.verified is true\n\n\t\tif validEmail.length is 0\n\t\t\tthrow new Meteor.Error 'error-invalid-email', 'Invalid email __email__'\n\t\t\treturn false\n\n\tRocketChat.models.Users.updateLastLoginById login.user._id\n\n\tMeteor.defer ->\n\t\tRocketChat.callbacks.run 'afterValidateLogin', login\n\n\treturn true\n\nAccounts.validateNewUser (user) ->\n\t# bypass for livechat users\n\tif user.type is 'visitor'\n\t\treturn true\n\n\tif RocketChat.settings.get('Accounts_Registration_AuthenticationServices_Enabled') is false and RocketChat.settings.get('LDAP_Enable') is false and not user.services?.password?\n\t\tthrow new Meteor.Error 'registration-disabled-authentication-services', 'User registration is disabled for authentication services'\n\treturn true\n\n\nAccounts.validateNewUser (user) ->\n\t# bypass for livechat users\n\tif user.type is 'visitor'\n\t\treturn true\n\n\tdomainWhiteList = RocketChat.settings.get('Accounts_AllowedDomainsList')\n\n\tif _.isEmpty s.trim(domainWhiteList)\n\t\treturn true\n\n\tdomainWhiteList = _.map(domainWhiteList.split(','), (domain) -> domain.trim())\n\n\tif user.emails?.length > 0\n\t\tret = false\n\t\temail = user.emails[0].address\n\t\tfor domain in domainWhiteList\n\t\t\tif email.match('@' + RegExp.escape(domain) + '$')\n\t\t\t\tret = true\n\t\t\t\tbreak\n\n\t\treturn ret\n\n\treturn true\n"]}