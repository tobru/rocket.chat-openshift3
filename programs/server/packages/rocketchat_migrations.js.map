{"version":3,"sources":["meteor://ðŸ’»app/migrations.js"],"names":[],"mappings":"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","file":"/packages/rocketchat_migrations.js","sourcesContent":["/*\n\tAdds migration capabilities. Migrations are defined like:\n\n\tMigrations.add({\n\t\tup: function() {}, //*required* code to run to migrate upwards\n\t\tversion: 1, //*required* number to identify migration order\n\t\tdown: function() {}, //*optional* code to run to migrate downwards\n\t\tname: 'Something' //*optional* display name for the migration\n\t});\n\n\tThe ordering of migrations is determined by the version you set.\n\n\tTo run the migrations, set the MIGRATE environment variable to either\n\t'latest' or the version number you want to migrate to. Optionally, append\n\t',exit' if you want the migrations to exit the meteor process, e.g if you're\n\tmigrating from a script (remember to pass the --once parameter).\n\n\te.g:\n\tMIGRATE=\"latest\" mrt # ensure we'll be at the latest version and run the app\n\tMIGRATE=\"latest,exit\" mrt --once # ensure we'll be at the latest version and exit\n\tMIGRATE=\"2,exit\" mrt --once # migrate to version 2 and exit\n\n\tNote: Migrations will lock ensuring only 1 app can be migrating at once. If\n\ta migration crashes, the control record in the migrations collection will\n\tremain locked and at the version it was at previously, however the db could\n\tbe in an inconsistant state.\n*/\n\n// since we'll be at version 0 by default, we should have a migration set for\n// it.\nvar DefaultMigration = {\n\tversion: 0,\n\tup: function() {\n\t\t// @TODO: check if collection \"migrations\" exist\n\t\t// If exists, rename and rerun _migrateTo\n\t}\n};\n\nMigrations = {\n\t_list: [DefaultMigration],\n\toptions: {\n\t\t// false disables logging\n\t\tlog: true,\n\t\t// null or a function\n\t\tlogger: null,\n\t\t// enable/disable info log \"already at latest.\"\n\t\tlogIfLatest: true,\n\t\t// lock will be valid for this amount of minutes\n\t\tlockExpiration: 5,\n\t\t// retry interval in seconds\n\t\tretryInterval: 10,\n\t\t// max number of attempts to retry unlock\n\t\tmaxAttempts: 30,\n\t\t// migrations collection name\n\t\tcollectionName: \"migrations\"\n\t\t\t// collectionName: \"rocketchat_migrations\"\n\t},\n\tconfig: function(opts) {\n\t\tthis.options = _.extend({}, this.options, opts);\n\t},\n}\n\nMigrations._collection = new Mongo.Collection(Migrations.options.collectionName);\n\n/* Create a box around messages for displaying on a console.log */\nfunction makeABox(message, color = 'red') {\n\tif (!_.isArray(message)) {\n\t\tmessage = message.split(\"\\n\");\n\t}\n\tlet len = _(message).reduce(function(memo, msg) {\n\t\treturn Math.max(memo, msg.length)\n\t}, 0) + 4;\n\tlet text = message.map((msg) => {\n\t\treturn \"|\" [color] + s.lrpad(msg, len)[color] + \"|\" [color]\n\t}).join(\"\\n\");\n\tlet topLine = \"+\" [color] + s.pad('', len, '-')[color] + \"+\" [color];\n\tlet separator = \"|\" [color] + s.pad('', len, '') + \"|\" [color];\n\tlet bottomLine = \"+\" [color] + s.pad('', len, '-')[color] + \"+\" [color];\n\treturn `\\n${topLine}\\n${separator}\\n${text}\\n${separator}\\n${bottomLine}\\n`;\n}\n\n/*\n\tLogger factory function. Takes a prefix string and options object\n\tand uses an injected `logger` if provided, else falls back to\n\tMeteor's `Log` package.\n\tWill send a log object to the injected logger, on the following form:\n\t\tmessage: String\n\t\tlevel: String (info, warn, error, debug)\n\t\ttag: 'Migrations'\n*/\nfunction createLogger(prefix) {\n\tcheck(prefix, String);\n\n\t// Return noop if logging is disabled.\n\tif (Migrations.options.log === false) {\n\t\treturn function() {};\n\t}\n\n\treturn function(level, message) {\n\t\tcheck(level, Match.OneOf('info', 'error', 'warn', 'debug'));\n\t\tcheck(message, Match.OneOf(String, [String]));\n\n\t\tvar logger = Migrations.options && Migrations.options.logger;\n\n\t\tif (logger && _.isFunction(logger)) {\n\n\t\t\tlogger({\n\t\t\t\tlevel: level,\n\t\t\t\tmessage: message,\n\t\t\t\ttag: prefix\n\t\t\t});\n\n\t\t} else {\n\t\t\tLog[level]({\n\t\t\t\tmessage: prefix + ': ' + message\n\t\t\t});\n\t\t}\n\t}\n}\n\nvar log;\n\nvar options = Migrations.options;\n\n// collection holding the control record\n\nlog = createLogger('Migrations');\n\n['info', 'warn', 'error', 'debug'].forEach(function(level) {\n\tlog[level] = _.partial(log, level);\n});\n\n// if (process.env.MIGRATE)\n//   Migrations.migrateTo(process.env.MIGRATE);\n\n// Add a new migration:\n// {up: function *required\n//  version: Number *required\n//  down: function *optional\n//  name: String *optional\n// }\nMigrations.add = function(migration) {\n\tif (typeof migration.up !== 'function')\n\t\tthrow new Meteor.Error('Migration must supply an up function.');\n\n\tif (typeof migration.version !== 'number')\n\t\tthrow new Meteor.Error('Migration must supply a version number.');\n\n\tif (migration.version <= 0)\n\t\tthrow new Meteor.Error('Migration version must be greater than 0');\n\n\t// Freeze the migration object to make it hereafter immutable\n\tObject.freeze(migration);\n\n\tthis._list.push(migration);\n\tthis._list = _.sortBy(this._list, function(m) {\n\t\treturn m.version;\n\t});\n}\n\n// Attempts to run the migrations using command in the form of:\n// e.g 'latest', 'latest,exit', 2\n// use 'XX,rerun' to re-run the migration at that version\nMigrations.migrateTo = function(command) {\n\tif (_.isUndefined(command) || command === '' || this._list.length === 0)\n\t\tthrow new Error(\"Cannot migrate using invalid command: \" + command);\n\n\tif (typeof command === 'number') {\n\t\tvar version = command;\n\t} else {\n\t\tvar version = command.split(',')[0];\n\t\tvar subcommand = command.split(',')[1];\n\t}\n\n\tconst maxAttempts = Migrations.options.maxAttempts;\n\tconst retryInterval = Migrations.options.retryInterval;\n\tfor (let attempts = 1; attempts <= maxAttempts; attempts++) {\n\t\tif (version === 'latest') {\n\t\t\tmigrated = this._migrateTo(_.last(this._list).version);\n\t\t} else {\n\t\t\tmigrated = this._migrateTo(parseInt(version), (subcommand === 'rerun'));\n\t\t}\n\t\tif (migrated) {\n\t\t\tbreak;\n\t\t} else {\n\t\t\tlet willRetry;\n\t\t\tif (attempts < maxAttempts) {\n\t\t\t\twillRetry = ` Trying again in ${retryInterval} seconds.`;\n\t\t\t\tMeteor._sleepForMs(retryInterval * 1000);\n\t\t\t} else {\n\t\t\t\twillRetry = \"\";\n\t\t\t}\n\t\t\tconsole.log(`Not migrating, control is locked. Attempt ${attempts}/${maxAttempts}.${willRetry}`.yellow);\n\t\t}\n\t}\n\tif (!migrated) {\n\t\tlet control = this._getControl(); // Side effect: upserts control document.\n\t\tconsole.log(makeABox([\n\t\t\t\"ERROR! SERVER STOPPED\",\n\t\t\t\"\",\n\t\t\t\"Your database migration control is locked.\",\n\t\t\t\"Please make sure you are running the latest version and try again.\",\n\t\t\t\"If the problem persists, please contact support.\",\n\t\t\t\"\",\n\t\t\t\"This Rocket.Chat version: \" + RocketChat.Info.version,\n\t\t\t\"Database locked at version: \" + control.version,\n\t\t\t\"Database target version: \" + (version === 'latest' ? _.last(this._list).version : version),\n\t\t\t\"\",\n\t\t\t\"Commit: \" + RocketChat.Info.commit.hash,\n\t\t\t\"Date: \" + RocketChat.Info.commit.date,\n\t\t\t\"Branch: \" + RocketChat.Info.commit.branch,\n\t\t\t\"Tag: \" + RocketChat.Info.commit.tag\n\t\t]));\n\t\tprocess.exit(1);\n\t}\n\n\t// remember to run meteor with --once otherwise it will restart\n\tif (subcommand === 'exit')\n\t\tprocess.exit(0);\n}\n\n// just returns the current version\nMigrations.getVersion = function() {\n\treturn this._getControl().version;\n}\n\n// migrates to the specific version passed in\nMigrations._migrateTo = function(version, rerun) {\n\tvar self = this;\n\tvar control = this._getControl(); // Side effect: upserts control document.\n\tvar currentVersion = control.version;\n\n\tif (lock() === false) {\n\t\t// log.info('Not migrating, control is locked.');\n\t\t// Warning\n\t\treturn false;\n\t}\n\n\tif (rerun) {\n\t\tlog.info('Rerunning version ' + version);\n\t\tmigrate('up', version);\n\t\tlog.info('Finished migrating.');\n\t\tunlock();\n\t\treturn true;\n\t}\n\n\tif (currentVersion === version) {\n\t\tif (this.options.logIfLatest) {\n\t\t\tlog.info('Not migrating, already at version ' + version);\n\t\t}\n\t\tunlock();\n\t\treturn true;\n\t}\n\n\tvar startIdx = this._findIndexByVersion(currentVersion);\n\tvar endIdx = this._findIndexByVersion(version);\n\n\t// log.info('startIdx:' + startIdx + ' endIdx:' + endIdx);\n\tlog.info('Migrating from version ' + this._list[startIdx].version + ' -> ' + this._list[endIdx].version);\n\n\t// run the actual migration\n\tfunction migrate(direction, idx) {\n\t\tvar migration = self._list[idx];\n\n\t\tif (typeof migration[direction] !== 'function') {\n\t\t\tunlock();\n\t\t\tthrow new Meteor.Error('Cannot migrate ' + direction + ' on version ' + migration.version);\n\t\t}\n\n\t\tfunction maybeName() {\n\t\t\treturn migration.name ? ' (' + migration.name + ')' : '';\n\t\t}\n\n\t\tlog.info('Running ' + direction + '() on version ' + migration.version + maybeName());\n\n\t\ttry {\n\t\t\tmigration[direction](migration);\n\t\t} catch (e) {\n\t\t\tconsole.log(makeABox([\n\t\t\t\t\"ERROR! SERVER STOPPED\",\n\t\t\t\t\"\",\n\t\t\t\t\"Your database migration failed:\",\n\t\t\t\te.message,\n\t\t\t\t\"\",\n\t\t\t\t\"Please make sure you are running the latest version and try again.\",\n\t\t\t\t\"If the problem persists, please contact support.\",\n\t\t\t\t\"\",\n\t\t\t\t\"This Rocket.Chat version: \" + RocketChat.Info.version,\n\t\t\t\t\"Database locked at version: \" + control.version,\n\t\t\t\t\"Database target version: \" + version,\n\t\t\t\t\"\",\n\t\t\t\t\"Commit: \" + RocketChat.Info.commit.hash,\n\t\t\t\t\"Date: \" + RocketChat.Info.commit.date,\n\t\t\t\t\"Branch: \" + RocketChat.Info.commit.branch,\n\t\t\t\t\"Tag: \" + RocketChat.Info.commit.tag\n\t\t\t]));\n\t\t\tprocess.exit(1);\n\t\t}\n\t}\n\n\t// Returns true if lock was acquired.\n\tfunction lock() {\n\t\tconst date = new Date();\n\t\tconst dateMinusInterval = moment(date).subtract(self.options.lockExpiration, 'minutes').toDate();\n\t\tconst build = RocketChat.Info ? RocketChat.Info.build.date : date;\n\n\t\t// This is atomic. The selector ensures only one caller at a time will see\n\t\t// the unlocked control, and locking occurs in the same update's modifier.\n\t\t// All other simultaneous callers will get false back from the update.\n\t\treturn self._collection.update({\n\t\t\t_id: 'control',\n\t\t\t$or: [{\n\t\t\t\tlocked: false\n\t\t\t}, {\n\t\t\t\tlockedAt: {\n\t\t\t\t\t$lt: dateMinusInterval\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tbuildAt: {\n\t\t\t\t\t$ne: build\n\t\t\t\t}\n\t\t\t}]\n\t\t}, {\n\t\t\t$set: {\n\t\t\t\tlocked: true,\n\t\t\t\tlockedAt: date,\n\t\t\t\tbuildAt: build\n\t\t\t}\n\t\t}) === 1;\n\t}\n\n\n\t// Side effect: saves version.\n\tfunction unlock() {\n\t\tself._setControl({\n\t\t\tlocked: false,\n\t\t\tversion: currentVersion\n\t\t});\n\t}\n\n\tif (currentVersion < version) {\n\t\tfor (var i = startIdx; i < endIdx; i++) {\n\t\t\tmigrate('up', i + 1);\n\t\t\tcurrentVersion = self._list[i + 1].version;\n\t\t\tself._setControl({\n\t\t\t\tlocked: true,\n\t\t\t\tversion: currentVersion\n\t\t\t});\n\t\t}\n\t} else {\n\t\tfor (var i = startIdx; i > endIdx; i--) {\n\t\t\tmigrate('down', i);\n\t\t\tcurrentVersion = self._list[i - 1].version;\n\t\t\tself._setControl({\n\t\t\t\tlocked: true,\n\t\t\t\tversion: currentVersion\n\t\t\t});\n\t\t}\n\t}\n\n\tunlock();\n\tlog.info('Finished migrating.');\n}\n\n// gets the current control record, optionally creating it if non-existant\nMigrations._getControl = function() {\n\tvar control = this._collection.findOne({\n\t\t_id: 'control'\n\t});\n\n\treturn control || this._setControl({\n\t\tversion: 0,\n\t\tlocked: false\n\t});\n}\n\n// sets the control record\nMigrations._setControl = function(control) {\n\t// be quite strict\n\tcheck(control.version, Number);\n\tcheck(control.locked, Boolean);\n\n\tthis._collection.update({\n\t\t_id: 'control'\n\t}, {\n\t\t$set: {\n\t\t\tversion: control.version,\n\t\t\tlocked: control.locked\n\t\t}\n\t}, {\n\t\tupsert: true\n\t});\n\n\treturn control;\n}\n\n// returns the migration index in _list or throws if not found\nMigrations._findIndexByVersion = function(version) {\n\tfor (var i = 0; i < this._list.length; i++) {\n\t\tif (this._list[i].version === version)\n\t\t\treturn i;\n\t}\n\n\tthrow new Meteor.Error('Can\\'t find migration version ' + version);\n}\n\n//reset (mainly intended for tests)\nMigrations._reset = function() {\n\tthis._list = [{\n\t\tversion: 0,\n\t\tup: function() {}\n\t}];\n\tthis._collection.remove({});\n}\n\nRocketChat.Migrations = Migrations;\n"]}