{"version":3,"sources":["meteor://ðŸ’»app/packages/rocketchat_logger/server.coffee"],"names":[],"mappings":"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","file":"/packages/rocketchat_logger.js","sourcesContent":["@LoggerManager = new class extends EventEmitter\n\tconstructor: ->\n\t\t@enabled = false\n\t\t@loggers = {}\n\t\t@queue = []\n\n\t\t@showPackage = false\n\t\t@showFileAndLine = false\n\t\t@logLevel = 0\n\n\tregister: (logger) ->\n\t\tif not logger instanceof Logger\n\t\t\treturn\n\n\t\t@loggers[logger.name] = logger\n\n\t\t@emit 'register', logger\n\n\taddToQueue: (logger, args)->\n\t\t@queue.push\n\t\t\tlogger: logger\n\t\t\targs: args\n\n\tdispatchQueue: ->\n\t\tfor item in @queue\n\t\t\titem.logger._log.apply item.logger, item.args\n\n\t\t@clearQueue()\n\n\tclearQueue: ->\n\t\t@queue = []\n\n\tdisable: ->\n\t\t@enabled = false\n\n\tenable: (dispatchQueue=false) ->\n\t\t@enabled = true\n\t\tif dispatchQueue is true\n\t\t\t@dispatchQueue()\n\t\telse\n\t\t\t@clearQueue()\n\n\n# @LoggerManager.on 'register', ->\n# \tconsole.log('on register', arguments)\n\n\n@Logger = class Logger\n\tdefaultTypes:\n\t\tdebug:\n\t\t\tname: 'debug'\n\t\t\tcolor: 'blue'\n\t\t\tlevel: 2\n\t\tlog:\n\t\t\tname: 'info'\n\t\t\tcolor: 'blue'\n\t\t\tlevel: 1\n\t\tinfo:\n\t\t\tname: 'info'\n\t\t\tcolor: 'blue'\n\t\t\tlevel: 1\n\t\tsuccess:\n\t\t\tname: 'info'\n\t\t\tcolor: 'green'\n\t\t\tlevel: 1\n\t\twarn:\n\t\t\tname: 'warn'\n\t\t\tcolor: 'magenta'\n\t\t\tlevel: 1\n\t\terror:\n\t\t\tname: 'error'\n\t\t\tcolor: 'red'\n\t\t\tlevel: 0\n\n\tconstructor: (@name, config={}) ->\n\t\tself = @\n\t\t@config = {}\n\n\t\t_.extend @config, config\n\n\t\tif LoggerManager.loggers[@name]?\n\t\t\tLoggerManager.loggers[@name].warn 'Duplicated instance'\n\t\t\treturn LoggerManager.loggers[@name]\n\n\t\tfor type, typeConfig of @defaultTypes\n\t\t\tdo (type, typeConfig) ->\n\t\t\t\tself[type] = (args...) ->\n\t\t\t\t\tself._log.call self,\n\t\t\t\t\t\tsection: this.__section\n\t\t\t\t\t\ttype: type\n\t\t\t\t\t\tlevel: typeConfig.level\n\t\t\t\t\t\tmethod: typeConfig.name\n\t\t\t\t\t\targuments: args\n\n\t\t\t\tself[type+\"_box\"] = (args...) ->\n\t\t\t\t\tself._log.call self,\n\t\t\t\t\t\tsection: this.__section\n\t\t\t\t\t\ttype: type\n\t\t\t\t\t\tbox: true\n\t\t\t\t\t\tlevel: typeConfig.level\n\t\t\t\t\t\tmethod: typeConfig.name\n\t\t\t\t\t\targuments: args\n\n\t\tif @config.methods?\n\t\t\tfor method, typeConfig of @config.methods\n\t\t\t\tdo (method, typeConfig) ->\n\t\t\t\t\tif self[method]?\n\t\t\t\t\t\tself.warn \"Method\", method, \"already exists\"\n\n\t\t\t\t\tif not self.defaultTypes[typeConfig.type]?\n\t\t\t\t\t\tself.warn \"Method type\", typeConfig.type, \"does not exist\"\n\n\t\t\t\t\tself[method] = (args...) ->\n\t\t\t\t\t\tself._log.call self,\n\t\t\t\t\t\t\tsection: this.__section\n\t\t\t\t\t\t\ttype: typeConfig.type\n\t\t\t\t\t\t\tlevel: if typeConfig.level? then typeConfig.level else self.defaultTypes[typeConfig.type]?.level\n\t\t\t\t\t\t\tmethod: method\n\t\t\t\t\t\t\targuments: args\n\n\t\t\t\t\tself[method+\"_box\"] = (args...) ->\n\t\t\t\t\t\tself._log.call self,\n\t\t\t\t\t\t\tsection: this.__section\n\t\t\t\t\t\t\ttype: typeConfig.type\n\t\t\t\t\t\t\tbox: true\n\t\t\t\t\t\t\tlevel: if typeConfig.level? then typeConfig.level else self.defaultTypes[typeConfig.type]?.level\n\t\t\t\t\t\t\tmethod: method\n\t\t\t\t\t\t\targuments: args\n\n\t\tif @config.sections?\n\t\t\tfor section, name of @config.sections\n\t\t\t\tdo (section, name) ->\n\t\t\t\t\tself[section] = {}\n\t\t\t\t\tfor type, typeConfig of self.defaultTypes\n\t\t\t\t\t\tdo (type, typeConfig) =>\n\t\t\t\t\t\t\tself[section][type] = =>\n\t\t\t\t\t\t\t\tself[type].apply {__section: name}, arguments\n\n\t\t\t\t\t\t\tself[section][type+\"_box\"] = =>\n\t\t\t\t\t\t\t\tself[type+\"_box\"].apply {__section: name}, arguments\n\n\t\t\t\t\tfor method, typeConfig of self.config.methods\n\t\t\t\t\t\tdo (method, typeConfig) =>\n\t\t\t\t\t\t\tself[section][method] = =>\n\t\t\t\t\t\t\t\tself[method].apply {__section: name}, arguments\n\n\t\t\t\t\t\t\tself[section][method+\"_box\"] = =>\n\t\t\t\t\t\t\t\tself[method+\"_box\"].apply {__section: name}, arguments\n\n\t\tLoggerManager.register @\n\t\treturn @\n\n\tgetPrefix: (options) ->\n\t\tif options.section?\n\t\t\tprefix = \"#{@name} âž” #{options.section}.#{options.method}\"\n\t\telse\n\t\t\tprefix = \"#{@name} âž” #{options.method}\"\n\n\t\tdetails = @_getCallerDetails()\n\n\t\tdetailParts = []\n\t\tif details.package? and (LoggerManager.showPackage is true or options.type is 'error')\n\t\t\tdetailParts.push details.package\n\n\t\tif LoggerManager.showFileAndLine is true or options.type is 'error'\n\t\t\tif details.file? and details.line?\n\t\t\t\tdetailParts.push \"#{details.file}:#{details.line}\"\n\t\t\telse\n\t\t\t\tif details.file?\n\t\t\t\t\tdetailParts.push details.file\n\t\t\t\tif details.line?\n\t\t\t\t\tdetailParts.push details.line\n\n\t\tif @defaultTypes[options.type]?\n\t\t\tprefix = prefix[@defaultTypes[options.type].color]\n\n\t\tif detailParts.length > 0\n\t\t\tprefix = \"#{detailParts.join(' ')} #{prefix}\"\n\n\t\treturn prefix\n\n\t# @returns {Object: { line: Number, file: String }}\n\t_getCallerDetails: ->\n\t\tgetStack = () ->\n\t\t\t# We do NOT use Error.prepareStackTrace here (a V8 extension that gets us a\n\t\t\t# pre-parsed stack) since it's impossible to compose it with the use of\n\t\t\t# Error.prepareStackTrace used on the server for source maps.\n\t\t\terr = new Error\n\t\t\tstack = err.stack\n\t\t\treturn stack\n\n\t\tstack = getStack()\n\n\t\tif not stack\n\t\t\treturn {}\n\n\t\tlines = stack.split('\\n')\n\n\t\t# looking for the first line outside the logging package (or an\n\t\t# eval if we find that first)\n\t\tline = undefined\n\t\tfor item, index in lines when index > 0\n\t\t\tline = item\n\t\t\tif line.match(/^\\s*at eval \\(eval/)\n\t\t\t\treturn {file: \"eval\"}\n\n\t\t\tif not line.match(/packages\\/rocketchat_logger(?:\\/|\\.js)/)\n\t\t\t\tbreak\n\n\t\tdetails = {}\n\n\t\t# The format for FF is 'functionName@filePath:lineNumber'\n\t\t# The format for V8 is 'functionName (packages/logging/logging.js:81)' or\n\t\t#                      'packages/logging/logging.js:81'\n\t\tmatch = /(?:[@(]| at )([^(]+?):([0-9:]+)(?:\\)|$)/.exec(line)\n\t\tif not match\n\t\t\treturn details\n\t\t# in case the matched block here is line:column\n\t\tdetails.line = match[2].split(':')[0]\n\n\t\t# Possible format: https://foo.bar.com/scripts/file.js?random=foobar\n\t\t# XXX: if you can write the following in better way, please do it\n\t\t# XXX: what about evals?\n\t\tdetails.file = match[1].split('/').slice(-1)[0].split('?')[0]\n\n\t\tpackageMatch = match[1].match(/packages\\/([^\\.\\/]+)(?:\\/|\\.)/)\n\t\tif packageMatch?\n\t\t\tdetails.package = packageMatch[1]\n\n\t\treturn details\n\n\tmakeABox: (message, title) ->\n\t\tif not _.isArray(message)\n\t\t\tmessage = message.split(\"\\n\")\n\n\t\tlen = 0\n\t\tfor line in message\n\t\t\tlen = Math.max(len, line.length)\n\n\t\ttopLine = \"+--\" + s.pad('', len, '-') + \"--+\"\n\t\tseparator = \"|  \" + s.pad('', len, '') + \"  |\"\n\t\tlines = []\n\n\t\tlines.push topLine\n\t\tif title?\n\t\t\tlines.push \"|  \" + s.lrpad(title, len) + \"  |\"\n\t\t\tlines.push topLine\n\n\t\tlines.push separator\n\n\t\tfor line in message\n\t\t\tlines.push \"|  \" + s.rpad(line, len) + \"  |\"\n\n\t\tlines.push separator\n\t\tlines.push topLine\n\t\treturn lines\n\n\n\t_log: (options) ->\n\t\tif LoggerManager.enabled is false\n\t\t\tLoggerManager.addToQueue @, arguments\n\t\t\treturn\n\n\t\toptions.level ?= 1\n\n\t\tif LoggerManager.logLevel < options.level\n\t\t\treturn\n\n\t\tprefix = @getPrefix(options)\n\n\t\tif options.box is true and _.isString(options.arguments[0])\n\t\t\tcolor = undefined\n\t\t\tif @defaultTypes[options.type]?\n\t\t\t\tcolor = @defaultTypes[options.type].color\n\n\t\t\tbox = @makeABox options.arguments[0], options.arguments[1]\n\t\t\tsubPrefix = 'âž”'\n\t\t\tif color?\n\t\t\t\tsubPrefix = subPrefix[color]\n\n\t\t\tconsole.log subPrefix, prefix\n\t\t\tfor line in box\n\t\t\t\tif color?\n\t\t\t\t\tconsole.log subPrefix, line[color]\n\t\t\t\telse\n\t\t\t\t\tconsole.log subPrefix, line\n\t\telse\n\t\t\toptions.arguments.unshift prefix\n\t\t\tconsole.log.apply console, options.arguments\n\n\t\treturn\n\n\n@SystemLogger = new Logger 'System',\n\tmethods:\n\t\tstartup:\n\t\t\ttype: 'success'\n\t\t\tlevel: 0\n\n\nprocessString = (string, date) ->\n\tif string[0] is '{'\n\t\ttry\n\t\t\treturn Log.format EJSON.parse(string), {color: true}\n\n\ttry\n\t\treturn Log.format {message: string, time: date, level: 'info'}, {color: true}\n\n\treturn string\n\nStdOut = new class extends EventEmitter\n\tconstructor: ->\n\t\t@queue = []\n\t\twrite = process.stdout.write\n\t\tprocess.stdout.write = (string, encoding, fd) =>\n\t\t\twrite.apply(process.stdout, arguments)\n\t\t\tdate = new Date\n\t\t\tstring = processString string, date\n\n\t\t\titem =\n\t\t\t\tid: Random.id()\n\t\t\t\tstring: string\n\t\t\t\tts: date\n\n\t\t\t@queue.push item\n\n\t\t\tif RocketChat?.settings?.get('Log_View_Limit')? and @queue.length > RocketChat.settings.get('Log_View_Limit')\n\t\t\t\t@queue.shift()\n\n\t\t\t@emit 'write', string, item\n\n\nMeteor.publish 'stdout', ->\n\tunless @userId\n\t\treturn @ready()\n\n\tif RocketChat.authz.hasPermission(@userId, 'view-logs') isnt true\n\t\treturn @ready()\n\n\tfor item in StdOut.queue\n\t\t@added 'stdout', item.id,\n\t\t\tstring: item.string\n\t\t\tts: item.ts\n\n\t@ready()\n\n\tStdOut.on 'write', (string, item) =>\n\t\t@added 'stdout', item.id,\n\t\t\tstring: item.string\n\t\t\tts: item.ts\n\n\treturn\n"]}