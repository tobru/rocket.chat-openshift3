{"version":3,"sources":["meteor://ðŸ’»app/packages/rocketchat_message-pin/server/settings.coffee","meteor://ðŸ’»app/packages/rocketchat_message-pin/server/pinMessage.coffee","meteor://ðŸ’»app/packages/rocketchat_message-pin/server/publications/pinnedMessages.coffee","meteor://ðŸ’»app/packages/rocketchat_message-pin/server/startup/indexes.coffee"],"names":[],"mappings":"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","file":"/packages/rocketchat_message-pin.js","sourcesContent":["Meteor.startup ->\n\tRocketChat.settings.add 'Message_AllowPinning', true, { type: 'boolean', group: 'Message', public: true }\n\tRocketChat.models.Permissions.upsert('pin-message', { $setOnInsert: { roles: ['owner', 'moderator', 'admin'] } });\n","Meteor.methods\n\tpinMessage: (message) ->\n\t\tif not Meteor.userId()\n\t\t\tthrow new Meteor.Error('error-invalid-user', \"Invalid user\", { method: 'pinMessage' })\n\n\t\tif not RocketChat.settings.get 'Message_AllowPinning'\n\t\t\tthrow new Meteor.Error 'error-action-not-allowed', 'Message pinning not allowed', { method: 'pinMessage', action: 'Message_pinning' }\n\n\t\troom = RocketChat.models.Rooms.findOne({ _id: message.rid })\n\n\t\tif Array.isArray(room.usernames) && room.usernames.indexOf(Meteor.user().username) is -1\n\t\t\treturn false\n\n\t\t# If we keep history of edits, insert a new message to store history information\n\t\tif RocketChat.settings.get 'Message_KeepHistory'\n\t\t\tRocketChat.models.Messages.cloneAndSaveAsHistoryById message._id\n\n\t\tme = RocketChat.models.Users.findOneById Meteor.userId()\n\n\t\tmessage.pinned = true\n\t\tmessage.pinnedAt = Date.now\n\t\tmessage.pinnedBy =\n\t\t\t_id: Meteor.userId()\n\t\t\tusername: me.username\n\n\t\tmessage = RocketChat.callbacks.run 'beforeSaveMessage', message\n\n\t\tRocketChat.models.Messages.setPinnedByIdAndUserId message._id, message.pinnedBy, message.pinned\n\n\t\tRocketChat.models.Messages.createWithTypeRoomIdMessageAndUser 'message_pinned', message.rid, '', me,\n\t\t\tattachments: [\n\t\t\t\t\"text\" : message.msg\n\t\t\t\t\"author_name\" : message.u.username,\n\t\t\t\t\"author_icon\" : getAvatarUrlFromUsername(message.u.username),\n\t\t\t\t\"ts\" : message.ts\n\t\t\t]\n\n\tunpinMessage: (message) ->\n\t\tif not Meteor.userId()\n\t\t\tthrow new Meteor.Error('error-invalid-user', \"Invalid user\", { method: 'unpinMessage' })\n\n\t\tif not RocketChat.settings.get 'Message_AllowPinning'\n\t\t\tthrow new Meteor.Error 'error-action-not-allowed', 'Message pinning not allowed', { method: 'unpinMessage', action: 'Message_pinning' }\n\n\t\troom = RocketChat.models.Rooms.findOne({ _id: message.rid })\n\n\t\tif Array.isArray(room.usernames) && room.usernames.indexOf(Meteor.user().username) is -1\n\t\t\treturn false\n\n\t\t# If we keep history of edits, insert a new message to store history information\n\t\tif RocketChat.settings.get 'Message_KeepHistory'\n\t\t\tRocketChat.models.Messages.cloneAndSaveAsHistoryById message._id\n\n\t\tme = RocketChat.models.Users.findOneById Meteor.userId()\n\n\t\tmessage.pinned = false\n\t\tmessage.pinnedBy =\n\t\t\t_id: Meteor.userId()\n\t\t\tusername: me.username\n\n\t\tmessage = RocketChat.callbacks.run 'beforeSaveMessage', message\n\n\t\tRocketChat.models.Messages.setPinnedByIdAndUserId message._id, message.pinnedBy, message.pinned\n\n\n\t\t# Meteor.defer ->\n\t\t# \tRocketChat.callbacks.run 'afterSaveMessage', RocketChat.models.Messages.findOneById(message.id)\n","Meteor.publish 'pinnedMessages', (rid, limit=50) ->\n\tunless this.userId\n\t\treturn this.ready()\n\n\tpublication = @\n\n\tuser = RocketChat.models.Users.findOneById this.userId\n\tunless user\n\t\treturn this.ready()\n\n\tcursorHandle = RocketChat.models.Messages.findPinnedByRoom(rid, { sort: { ts: -1 }, limit: limit }).observeChanges\n\t\tadded: (_id, record) ->\n\t\t\tpublication.added('rocketchat_pinned_message', _id, record)\n\n\t\tchanged: (_id, record) ->\n\t\t\tpublication.changed('rocketchat_pinned_message', _id, record)\n\n\t\tremoved: (_id) ->\n\t\t\tpublication.removed('rocketchat_pinned_message', _id)\n\n\t@ready()\n\t@onStop ->\n\t\tcursorHandle.stop()\n","Meteor.startup ->\n\tMeteor.defer ->\n\t\tRocketChat.models.Messages.tryEnsureIndex { 'pinnedBy._id': 1 }, { sparse: 1 }\n"]}