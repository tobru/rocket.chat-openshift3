{"version":3,"sources":["meteor://ðŸ’»app/packages/mizzao_autocomplete/packages/mizzao_autocomplete.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kG","file":"/packages/mizzao_autocomplete.js","sourcesContent":["(function () {\n\n////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                        //\n// packages/mizzao:autocomplete/autocomplete-server.coffee.js                             //\n//                                                                                        //\n////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                          //\n__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\n                 \n\nAutocomplete = (function() {\n  function Autocomplete() {}\n\n  Autocomplete.publishCursor = function(cursor, sub) {\n    return Mongo.Collection._publishCursor(cursor, sub, \"autocompleteRecords\");\n  };\n\n  return Autocomplete;\n\n})();\n\nMeteor.publish('autocomplete-recordset', function(selector, options, collName) {\n  var collection;\n  collection = global[collName];\n  if (!collection) {\n    throw new Error(collName + ' is not defined on the global namespace of the server.');\n  }\n  if (!collection._isInsecure()) {\n    Meteor._debug(collName + ' is a secure collection, therefore no data was returned because the client could compromise security by subscribing to arbitrary server collections via the browser console. Please write your own publish function.');\n    return [];\n  }\n  if (options.limit) {\n    options.limit = Math.min(50, Math.abs(options.limit));\n  }\n  Autocomplete.publishCursor(collection.find(selector, options), this);\n  return this.ready();\n});\n////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n"]}