{"version":3,"sources":["meteor://ðŸ’»app/packages/rocketchat_cors/cors.coffee","meteor://ðŸ’»app/packages/rocketchat_cors/common.coffee"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAGA;;AAAA,MAAM,CAAC,kBAAkB,CAAC,GAA1B,CAA8B,SAAC,GAAD,EAAM,GAAN,EAAW,IAAX;AAC7B;AAAA,MAAG,GAAG,CAAC,KAAP;AACC,WAAO,MAAP,CADD;GAAA;AAGA,MAAG,GAAG,CAAC,OAAQ,qBAAZ,KAAoC,MAApC,IAAkD,MAAM,GAAG,CAAC,OAAQ,kBAAlB,CAArD;AACC,WAAO,MAAP,CADD;GAHA;AAMA,aAAG,GAAG,CAAC,OAAQ,iBAAZ,KAAoC,EAApC,YAAwC,QAA3C;AACC,WAAO,MAAP,CADD;GANA;AAAA,EASA,MAAM,EATN;AAAA,EAUA,GAAG,CAAC,WAAJ,CAAgB,MAAhB,CAVA;AAAA,EAWA,GAAG,CAAC,EAAJ,CAAO,MAAP,EAAe,SAAC,KAAD;WAAW,OAAO,MAAlB;EAAA,CAAf,CAXA;SAYA,GAAG,CAAC,EAAJ,CAAO,KAAP,EAAc;AACb;AAAA,QAAG,yGAA4B,UAAU,CAAC,UAAX,KAAyB,OAAxD;AACC,aAAO,CAAC,GAAR,CAAY,WAAW,CAAC,KAAxB,EAA+B,GAAG,CAAC,MAAnC,EAA2C,GAAG,CAAC,GAA/C,EAAoD,cAApD,EAAoE,GAAG,CAAC,OAAxE,EAAiF,WAAjF,EAA8F,GAA9F,EADD;KAAA;AAGA;AACC,SAAG,CAAC,IAAJ,GAAW,IAAI,CAAC,KAAL,CAAW,GAAX,CAAX,CADD;KAAA;AAGC,MADK,YACL;AAAA,SAAG,CAAC,IAAJ,GAAW,GAAX,CAHD;KAHA;AAAA,IAQA,GAAG,CAAC,KAAJ,GAAY,IARZ;WASA,OAVa;EAAA,CAAd,EAb6B;AAAA,CAA9B;;AAAA,MA0BM,CAAC,kBAAkB,CAAC,GAA1B,CAA8B,SAAC,GAAD,EAAM,GAAN,EAAW,IAAX;AAC7B;AAAA,MAAG,0CAA0C,CAAC,IAA3C,CAAgD,GAAG,CAAC,GAApD,CAAH;AACC,OAAG,CAAC,SAAJ,CAAc,6BAAd,EAA6C,GAA7C,EADD;GAAA;AAAA,EAIA,YAAY,GAAG,CAAC,SAJhB;AAAA,EAKA,GAAG,CAAC,SAAJ,GAAgB,SAAC,GAAD,EAAM,GAAN;AACf,QAAG,GAAG,CAAC,WAAJ,OAAqB,6BAArB,IAAuD,QAAO,qBAAjE;AACC,aADD;KAAA;AAEA,WAAO,SAAS,CAAC,KAAV,CAAgB,IAAhB,EAAmB,SAAnB,CAAP,CAHe;EAAA,CALhB;AAUA,SAAO,MAAP,CAX6B;AAAA,CAA9B,CA1BA;;AAAA,sBAuCA,GAAyB,eAAe,CAAC,qBAvCzC;;AAAA,eAwCe,CAAC,sBAAhB,GAAyC,SAAC,WAAD,EAAc,GAAd,EAAmB,GAAnB,EAAwB,IAAxB;AACxC,KAAG,CAAC,SAAJ,CAAc,6BAAd,EAA6C,GAA7C;SACA,uBAAuB,WAAvB,EAAoC,GAApC,EAAyC,GAAzC,EAA8C,IAA9C,EAFwC;AAAA,CAxCzC;;AAAA,GA6CA,GAAM,GAAG,CAAC,OAAJ,CAAY,KAAZ,CA7CN;;AAAA,UA+CA,GAAa,MAAM,CAAC,UA/CpB;;AAAA,sBAgDA,GAAyB,UAAU,CAAC,SAAX,CAAqB,SAArB,CAA+B,CAAC,KAAhC,CAAsC,CAAtC,CAhDzB;;AAAA,UAiDU,CAAC,kBAAX,CAA8B,SAA9B,CAjDA;;AAAA,UAmDU,CAAC,WAAX,CAAuB,SAAvB,EAAkC,SAAC,GAAD,EAAM,GAAN;AACjC;AAAA,SAAO,SAAP;AAAA,EACA,OAAO;AACN;AAAA;SAAA;8CAAA;AACC,8BAAW,CAAC,KAAZ,CAAkB,UAAlB,EAA8B,IAA9B,GADD;AAAA;mBADM;EAAA,CADP;AAKA,MAAG,UAAU,CAAC,QAAQ,CAAC,GAApB,CAAwB,WAAxB,MAA0C,IAA7C;AACC;AACA,WAFD;GALA;AAAA,EASA,gBAAgB,GAAG,CAAC,UAAU,CAAC,aAAf,IAAgC,GAAG,CAAC,MAAM,CAAC,aAT3D;AAAA,EAWA,kBAAkB,4BAXlB;AAAA,EAYA,gBAAgB,SAAC,CAAD;AACf,WAAO,eAAe,CAAC,IAAhB,CAAqB,CAArB,CAAP,CADe;EAAA,CAZhB;AAAA,EAeA,UAAU,eAAe,CAAC,IAAhB,CAAqB,aAArB,KAAwC,CAAC,IAAO,CAAC,OAAQ,mBAAhB,IAAsC,CAAC,CAAC,GAAF,CAAM,GAAG,CAAC,OAAQ,mBAAkB,CAAC,KAA/B,CAAqC,GAArC,CAAN,EAAiD,aAAjD,CAAvC,CAflD;AAAA,EAiBA,QAAQ,GAAG,CAAC,UAAU,CAAC,IAAf,IAAuB,CAAC,GAAG,CAAC,OAAQ,qBAAZ,IAAqC,GAAG,CAAC,OAAQ,qBAAoB,CAAC,OAAjC,CAAyC,OAAzC,MAAuD,EAA7F,CAjB/B;AAmBA,MAAG,yGAA4B,UAAU,CAAC,UAAX,KAAyB,OAAxD;AACC,WAAO,CAAC,GAAR,CAAY,SAAZ,EAAuB,GAAG,CAAC,GAA3B;AAAA,IACA,OAAO,CAAC,GAAR,CAAY,eAAZ,EAA6B,aAA7B,CADA;AAAA,IAEA,OAAO,CAAC,GAAR,CAAY,SAAZ,EAAuB,OAAvB,CAFA;AAAA,IAGA,OAAO,CAAC,GAAR,CAAY,OAAZ,EAAqB,KAArB,CAHA;AAAA,IAIA,OAAO,CAAC,GAAR,CAAY,aAAZ,EAA2B,GAAG,CAAC,OAA/B,CAJA,CADD;GAnBA;AA0BA,MAAG,YAAgB,MAAnB;AACC,WAAO,GAAG,CAAC,OAAQ,QAAZ,IAAuB,GAAG,CAAC,KAAJ,CAAU,MAAM,CAAC,WAAP,EAAV,CAA+B,CAAC,QAA9D;AAAA,IAEA,OAAO,IAAI,CAAC,OAAL,CAAa,OAAb,EAAsB,EAAtB,CAFP;AAAA,IAIA,GAAG,CAAC,SAAJ,CAAc,GAAd,EACC;AAAA,kBAAY,aAAa,IAAb,GAAoB,GAAG,CAAC,GAApC;KADD,CAJA;AAAA,IAMA,GAAG,CAAC,GAAJ,EANA;AAOA,WARD;GA1BA;SAoCA,OArCiC;AAAA,CAAlC,CAnDA;;;;;;;;;;;;;;;;;;;;ACHA,MAAM,CAAC,OAAP,CAAe;SACd,UAAU,CAAC,QAAQ,CAAC,MAApB,CAA2B,WAA3B,EAAwC,SAAC,GAAD,EAAM,KAAN;WACvC,MAAM,CAAC,WAAW,CAAC,cAAc,CAAC,MAAlC,GAA2C,MADJ;EAAA,CAAxC,EADc;AAAA,CAAf","file":"/packages/rocketchat_cors.js","sourcesContent":["# Adding CORS headers so we can use CDNs for static content\n\n# Try to parse all request bodies as JSON\nWebApp.rawConnectHandlers.use (req, res, next) ->\n\tif req._body\n\t\treturn next()\n\n\tif req.headers['transfer-encoding'] is undefined and isNaN(req.headers['content-length'])\n\t\treturn next()\n\n\tif req.headers['content-type'] not in ['', undefined]\n\t\treturn next()\n\n\tbuf = ''\n\treq.setEncoding('utf8')\n\treq.on 'data', (chunk) -> buf += chunk\n\treq.on 'end', ->\n\t\tif RocketChat?.debugLevel? and RocketChat.debugLevel is 'debug'\n\t\t\tconsole.log '[request]'.green, req.method, req.url, '\\nheaders ->', req.headers, '\\nbody ->', buf\n\n\t\ttry\n\t\t\treq.body = JSON.parse(buf)\n\t\tcatch err\n\t\t\treq.body = buf\n\n\t\treq._body = true\n\t\tnext()\n\n\nWebApp.rawConnectHandlers.use (req, res, next) ->\n\tif /^\\/(api|_timesync|sockjs|tap-i18n)(\\/|$)/.test req.url\n\t\tres.setHeader(\"Access-Control-Allow-Origin\", \"*\")\n\n\t# Block next handlers to override CORS with value http://meteor.local\n\tsetHeader = res.setHeader\n\tres.setHeader = (key, val) ->\n\t\tif key.toLowerCase() is 'access-control-allow-origin' and val is 'http://meteor.local'\n\t\t\treturn\n\t\treturn setHeader.apply @, arguments\n\n\treturn next()\n\n_staticFilesMiddleware = WebAppInternals.staticFilesMiddleware\nWebAppInternals._staticFilesMiddleware = (staticFiles, req, res, next) ->\n\tres.setHeader(\"Access-Control-Allow-Origin\", \"*\")\n\t_staticFilesMiddleware(staticFiles, req, res, next)\n\n\nurl = Npm.require(\"url\")\n\nhttpServer = WebApp.httpServer\noldHttpServerListeners = httpServer.listeners('request').slice(0)\nhttpServer.removeAllListeners('request')\n\nhttpServer.addListener 'request', (req, res) ->\n\targs = arguments\n\tnext = ->\n\t\tfor oldListener in oldHttpServerListeners\n\t\t\toldListener.apply(httpServer, args)\n\n\tif RocketChat.settings.get('Force_SSL') isnt true\n\t\tnext()\n\t\treturn\n\n\tremoteAddress = req.connection.remoteAddress or req.socket.remoteAddress\n\n\tlocalhostRegexp = /^\\s*(127\\.0\\.0\\.1|::1)\\s*$/\n\tlocalhostTest = (x) ->\n\t\treturn localhostRegexp.test(x)\n\n\tisLocal = localhostRegexp.test(remoteAddress) and (not req.headers['x-forwarded-for'] or _.all(req.headers['x-forwarded-for'].split(','), localhostTest))\n\n\tisSsl = req.connection.pair or (req.headers['x-forwarded-proto'] and req.headers['x-forwarded-proto'].indexOf('https') isnt -1)\n\n\tif RocketChat?.debugLevel? and RocketChat.debugLevel is 'debug'\n\t\tconsole.log 'req.url', req.url\n\t\tconsole.log 'remoteAddress', remoteAddress\n\t\tconsole.log 'isLocal', isLocal\n\t\tconsole.log 'isSsl', isSsl\n\t\tconsole.log 'req.headers', req.headers\n\n\tif not isLocal and not isSsl\n\t\thost = req.headers['host'] or url.parse(Meteor.absoluteUrl()).hostname\n\n\t\thost = host.replace(/:\\d+$/, '')\n\n\t\tres.writeHead 302,\n\t\t\t'Location': 'https://' + host + req.url\n\t\tres.end()\n\t\treturn\n\n\tnext()\n","Meteor.startup ->\n\tRocketChat.settings.onload 'Force_SSL', (key, value) ->\n\t\tMeteor.absoluteUrl.defaultOptions.secure = value\n"]}