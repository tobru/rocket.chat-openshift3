{"version":3,"sources":["meteor://ðŸ’»app/lib/common/main.js","meteor://ðŸ’»app/lib/common/notifications.js","meteor://ðŸ’»app/lib/server/push.api.js","meteor://ðŸ’»app/lib/server/server.js"],"names":[],"mappings":"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","file":"/packages/raix_push.js","sourcesContent":["// The push object is an event emitter\nPush = new EventState();\n\n// This is the match pattern for tokens\n_matchToken = Match.OneOf({ apn: String }, { gcm: String });\n\n\n// Client-side security warnings, used to check options\ncheckClientSecurity = function(options) {\n\n  // Warn if certificates or keys are added here on client. We dont allow the\n  // user to do this for security reasons.\n  if (options.apn && options.apn.certData) {\n    throw new Error('Push.init: Dont add your APN certificate in client code!');\n  }\n\n  if (options.apn && options.apn.keyData) {\n    throw new Error('Push.init: Dont add your APN key in client code!');\n  }\n\n  if (options.apn && options.apn.passphrase) {\n    throw new Error('Push.init: Dont add your APN passphrase in client code!');\n  }\n\n  if (options.gcm && options.gcm.apiKey) {\n    throw new Error('Push.init: Dont add your GCM api key in client code!');\n  }\n};\n\n// DEPRECATED\nPush.init = function() {\n  console.warn('Push.init have been deprecated in favor of \"config.push.json\" please migrate');\n};\n","// Notifications collection\nPush.notifications = new Mongo.Collection('_raix_push_notifications');\n\n// This is a general function to validate that the data added to notifications\n// is in the correct format. If not this function will throw errors\nvar _validateDocument = function(notification) {\n\n  // Check the general notification\n  check(notification, {\n    from: String,\n    title: String,\n    text: String,\n    badge: Match.Optional(Number),\n    sound: Match.Optional(String),\n    notId: Match.Optional(Match.Integer),\n    apn: Match.Optional({\n      from: Match.Optional(String),\n      title: Match.Optional(String),\n      text: Match.Optional(String),\n      badge: Match.Optional(Number),\n      sound: Match.Optional(String),\n      notId: Match.Optional(Match.Integer)\n    }),\n    gcm: Match.Optional({\n      from: Match.Optional(String),\n      title: Match.Optional(String),\n      text: Match.Optional(String),\n      badge: Match.Optional(Number),\n      sound: Match.Optional(String),\n      notId: Match.Optional(Match.Integer)\n    }),\n    query: Match.Optional(String),\n    token: Match.Optional(_matchToken),\n    tokens: Match.Optional([_matchToken]),\n    payload: Match.Optional(Object),\n    delayUntil: Match.Optional(Date),\n    createdAt: Date,\n    createdBy: Match.OneOf(String, null)\n  });\n\n  // Make sure a token selector or query have been set\n  if (!notification.token && !notification.tokens && !notification.query) {\n    throw new Error('No token selector or query found');\n  }\n\n  // If tokens array is set it should not be empty\n  if (notification.tokens && !notification.tokens.length) {\n    throw new Error('No tokens in array');\n  }\n};\n\nPush.send = function(options) {\n  // If on the client we set the user id - on the server we need an option\n  // set or we default to \"<SERVER>\" as the creator of the notification\n  // If current user not set see if we can set it to the logged in user\n  // this will only run on the client if Meteor.userId is available\n  var currentUser = Meteor.isClient && Meteor.userId && Meteor.userId() ||\n          Meteor.isServer && (options.createdBy || '<SERVER>') || null;\n\n  // Rig the notification object\n   var notification = _.extend({\n    createdAt: new Date(),\n    createdBy: currentUser\n  }, _.pick(options, 'from', 'title', 'text'));\n\n   // Add extra\n   _.extend(notification, _.pick(options, 'payload', 'badge', 'sound', 'notId', 'delayUntil'));\n\n  if (Match.test(options.apn, Object)) {\n    notification.apn = _.pick(options.apn, 'from', 'title', 'text', 'badge', 'sound', 'notId');\n  }\n\n  if (Match.test(options.gcm, Object)) {\n    notification.gcm = _.pick(options.gcm, 'from', 'title', 'text', 'badge', 'sound', 'notId');\n  }\n\n  // Set one token selector, this can be token, array of tokens or query\n  if (options.query) {\n    // Set query to the json string version fixing #43 and #39\n    notification.query = JSON.stringify(options.query);\n  } else if (options.token) {\n    // Set token\n    notification.token = options.token;\n  } else if (options.tokens) {\n    // Set tokens\n    notification.tokens = options.tokens;\n  }\n\n  // Validate the notification\n  _validateDocument(notification);\n\n  // Try to add the notification to send, we return an id to keep track\n  return Push.notifications.insert(notification);\n};\n\nPush.allow = function(rules) {\n  if (rules.send) {\n    Push.notifications.allow({\n      'insert': function(userId, notification) {\n        // Validate the notification\n        _validateDocument(notification);\n        // Set the user defined \"send\" rules\n        return rules.send.apply(this, [userId, notification]);\n      }\n    });\n  }\n};\n\nPush.deny = function(rules) {\n  if (rules.send) {\n    Push.notifications.deny({\n      'insert': function(userId, notification) {\n        // Validate the notification\n        _validateDocument(notification);\n        // Set the user defined \"send\" rules\n        return rules.send.apply(this, [userId, notification]);\n      }\n    });\n  }\n};\n","/*\n  A general purpose user CordovaPush\n  ios, android, mail, twitter?, facebook?, sms?, snailMail? :)\n\n  Phonegap generic :\n  https://github.com/phonegap-build/PushPlugin\n */\n\n// getText / getBinary\n\nPush.setBadge = function(/* id, count */) {\n    // throw new Error('Push.setBadge not implemented on the server');\n};\n\nvar isConfigured = false;\n\nPush.Configure = function(options) {\n    var self = this;\n    // https://npmjs.org/package/apn\n\n    // After requesting the certificate from Apple, export your private key as\n    // a .p12 file anddownload the .cer file from the iOS Provisioning Portal.\n\n    // gateway.push.apple.com, port 2195\n    // gateway.sandbox.push.apple.com, port 2195\n\n    // Now, in the directory containing cert.cer and key.p12 execute the\n    // following commands to generate your .pem files:\n    // $ openssl x509 -in cert.cer -inform DER -outform PEM -out cert.pem\n    // $ openssl pkcs12 -in key.p12 -out key.pem -nodes\n\n    // Block multiple calls\n    if (isConfigured) {\n      throw new Error('Push.Configure should not be called more than once!');\n    }\n\n    isConfigured = true;\n\n    // Add debug info\n    if (Push.debug) {\n      console.log('Push.Configure', options);\n    }\n\n    // This function is called when a token is replaced on a device - normally\n    // this should not happen, but if it does we should take action on it\n    _replaceToken = function(currentToken, newToken) {\n        // console.log('Replace token: ' + currentToken + ' -- ' + newToken);\n        // If the server gets a token event its passing in the current token and\n        // the new value - if new value is undefined this empty the token\n        self.emitState('token', currentToken, newToken);\n    };\n\n    // Rig the removeToken callback\n    _removeToken = function(token) {\n        // console.log('Remove token: ' + token);\n        // Invalidate the token\n        self.emitState('token', token, null);\n    };\n\n\n    if (options.apn) {\n        if (Push.debug) {\n          console.log('Push: APN configured');\n        }\n\n        // Allow production to be a general option for push notifications\n        if (options.production === Boolean(options.production)) {\n          options.apn.production = options.production;\n        }\n\n        // Give the user warnings about development settings\n        if (options.apn.development) {\n          // This flag is normally set by the configuration file\n          console.warn('WARNING: Push APN is using development key and certificate');\n        } else {\n          // We check the apn gateway i the options, we could risk shipping\n          // server into production while using the production configuration.\n          // On the other hand we could be in development but using the production\n          // configuration. And finally we could have configured an unknown apn\n          // gateway (this could change in the future - but a warning about typos\n          // can save hours of debugging)\n          //\n          // Warn about gateway configurations - it's more a guide\n          if (options.apn.gateway) {\n\n              if (options.apn.gateway === 'gateway.sandbox.push.apple.com') {\n                  // Using the development sandbox\n                  console.warn('WARNING: Push APN is in development mode');\n              } else if (options.apn.gateway === 'gateway.push.apple.com') {\n                  // In production - but warn if we are running on localhost\n                  if (/http:\\/\\/localhost/.test(Meteor.absoluteUrl())) {\n                      console.warn('WARNING: Push APN is configured to production mode - but server is running' +\n                        ' from localhost');\n                  }\n              } else {\n                  // Warn about gateways we dont know about\n                  console.warn('WARNING: Push APN unkown gateway \"' + options.apn.gateway + '\"');\n              }\n\n          } else {\n              if (options.apn.production) {\n                  if (/http:\\/\\/localhost/.test(Meteor.absoluteUrl())) {\n                      console.warn('WARNING: Push APN is configured to production mode - but server is running' +\n                        ' from localhost');\n                  }\n              } else {\n                  console.warn('WARNING: Push APN is in development mode');\n              }\n          }\n\n        }\n\n        // Check certificate data\n        if (!options.apn.certData || !options.apn.certData.length) {\n          console.error('ERROR: Push server could not find certData');\n        }\n\n        // Check key data\n        if (!options.apn.keyData || !options.apn.keyData.length) {\n          console.error('ERROR: Push server could not find keyData');\n        }\n\n        // Rig apn connection\n        var apn = Npm.require('apn');\n        var apnConnection = new apn.Connection( options.apn );\n\n        // Listen to transmission errors - should handle the same way as feedback.\n        apnConnection.on('transmissionError', Meteor.bindEnvironment(function (errCode, notification, recipient) {\n          if (Push.debug) {\n            console.log('Got error code %d for token %s', errCode, notification.token);\n          }\n          if ([2, 5, 8].indexOf(errCode) >= 0) {\n\n\n            // Invalid token errors...\n            _removeToken({\n              apn: notification.token\n            });\n          }\n        }));\n        // XXX: should we do a test of the connection? It would be nice to know\n        // That the server/certificates/network are correct configured\n\n        // apnConnection.connect().then(function() {\n        //     console.info('CHECK: Push APN connection OK');\n        // }, function(err) {\n        //     console.warn('CHECK: Push APN connection FAILURE');\n        // });\n        // Note: the above code spoils the connection - investigate how to\n        // shutdown/close it.\n\n        self.sendAPN = function(userToken, notification) {\n            if (Match.test(notification.apn, Object)) {\n              notification = _.extend({}, notification, notification.apn);\n            }\n\n            // console.log('sendAPN', notification.from, userToken, notification.title, notification.text,\n            // notification.badge, notification.priority);\n            var priority = (notification.priority || notification.priority === 0)? notification.priority : 10;\n\n            var myDevice = new apn.Device(userToken);\n\n            var note = new apn.Notification();\n\n            note.expiry = Math.floor(Date.now() / 1000) + 3600; // Expires 1 hour from now.\n            if (typeof notification.badge !== 'undefined') {\n              note.badge = notification.badge;\n            }\n            if (typeof notification.sound !== 'undefined') {\n              note.sound = notification.sound;\n            }\n\n            // adds category support for iOS8 custom actions as described here:\n            // https://developer.apple.com/library/ios/documentation/NetworkingInternet/Conceptual/\n            // RemoteNotificationsPG/Chapters/IPhoneOSClientImp.html#//apple_ref/doc/uid/TP40008194-CH103-SW36\n            if (typeof notification.category !== 'undefined') {\n              note.category = notification.category;\n            }\n\n            note.alert = notification.text;\n            // Allow the user to set payload data\n            note.payload = (notification.payload) ? { ejson: EJSON.stringify(notification.payload) } : {};\n\n            note.payload.messageFrom = notification.from;\n            note.priority = priority;\n\n\n            // Store the token on the note so we can reference it if there was an error\n            note.token = userToken;\n\n            // console.log('I:Send message to: ' + userToken + ' count=' + count);\n\n            apnConnection.pushNotification(note, myDevice);\n\n        };\n\n\n        var initFeedback = function () {\n            var apn = Npm.require('apn');\n            // console.log('Init feedback');\n            var feedbackOptions = {\n                'batchFeedback': true,\n\n                // Time in SECONDS\n                'interval': 5,\n                production: !options.apn.development,\n                cert: options.certData,\n                key: options.keyData,\n                passphrase: options.passphrase\n            };\n\n            var feedback = new apn.Feedback(feedbackOptions);\n            feedback.on('feedback', function (devices) {\n                devices.forEach(function (item) {\n                    // Do something with item.device and item.time;\n                    // console.log('A:PUSH FEEDBACK ' + item.device + ' - ' + item.time);\n                    // The app is most likely removed from the device, we should\n                    // remove the token\n                    _removeToken({\n                        apn: item.device\n                    });\n                });\n            });\n\n            feedback.start();\n        };\n\n        // Init feedback from apn server\n        // This will help keep the appCollection up-to-date, it will help update\n        // and remove token from appCollection.\n        initFeedback();\n\n    } // EO ios notification\n\n    if (options.gcm && options.gcm.apiKey) {\n        if (Push.debug) {\n          console.log('GCM configured');\n        }\n        //self.sendGCM = function(options.from, userTokens, options.title, options.text, options.badge, options.priority) {\n        self.sendGCM = function(userTokens, notification) {\n            if (Match.test(notification.gcm, Object)) {\n              notification = _.extend({}, notification, notification.gcm);\n            }\n\n            // Make sure userTokens are an array of strings\n            if (userTokens === ''+userTokens) {\n              userTokens = [userTokens];\n            }\n\n            // Check if any tokens in there to send\n            if (!userTokens.length) {\n                if (Push.debug) {\n                  console.log('sendGCM no push tokens found');\n                }\n                return;\n            }\n\n            if (Push.debug) {\n              console.log('sendGCM', userTokens, notification);\n            }\n\n            var gcm = Npm.require('node-gcm');\n            var Fiber = Npm.require('fibers');\n\n            // Allow user to set payload\n            var data = (notification.payload) ? { ejson: EJSON.stringify(notification.payload) } : {};\n\n            data.title = notification.title;\n            data.message = notification.text;\n\n            // Set extra details\n            if (typeof notification.badge !== 'undefined') {\n              data.msgcnt = notification.badge;\n            }\n            if (typeof notification.sound !== 'undefined') {\n              data.soundname = notification.sound;\n            }\n            if (typeof notification.notId !== 'undefined') {\n              data.notId = notification.notId;\n            }\n\n            //var message = new gcm.Message();\n            var message = new gcm.Message({\n                collapseKey: notification.from,\n            //    delayWhileIdle: true,\n            //    timeToLive: 4,\n            //    restricted_package_name: 'dk.gi2.app'\n                data: data\n            });\n\n            if (Push.debug) {\n              console.log('Create GCM Sender using \"' + options.gcm.apiKey + '\"');\n            }\n            var sender = new gcm.Sender(options.gcm.apiKey);\n\n            _.each(userTokens, function(value /*, key */) {\n                if (Push.debug) {\n                  console.log('A:Send message to: ' + value);\n                }\n            });\n\n            /*message.addData('title', title);\n            message.addData('message', text);\n            message.addData('msgcnt', '1');\n            message.collapseKey = 'sitDrift';\n            message.delayWhileIdle = true;\n            message.timeToLive = 3;*/\n\n            // /**\n            //  * Parameters: message-literal, userTokens-array, No. of retries, callback-function\n            //  */\n\n            var userToken = (userTokens.length === 1)?userTokens[0]:null;\n\n            sender.send(message, userTokens, 5, function (err, result) {\n                if (err) {\n                    if (Push.debug) {\n                      console.log('ANDROID ERROR: result of sender: ' + result);\n                    }\n                } else {\n                    if (result === null) {\n                      if (Push.debug) {\n                        console.log('ANDROID: Result of sender is null');\n                      }\n                      return;\n                    }\n                    if (Push.debug) {\n                      console.log('ANDROID: Result of sender: ' + JSON.stringify(result));\n                    }\n                    if (result.canonical_ids === 1 && userToken) { // jshint ignore:line\n\n                        // This is an old device, token is replaced\n                        Fiber(function(self) {\n                            // Run in fiber\n                            try {\n                                self.callback(self.oldToken, self.newToken);\n                            } catch(err) {\n\n                            }\n\n                        }).run({\n                            oldToken: { gcm: userToken },\n                            newToken: { gcm: result.results[0].registration_id }, // jshint ignore:line\n                            callback: _replaceToken\n                        });\n                        //_replaceToken({ gcm: userToken }, { gcm: result.results[0].registration_id });\n\n                    }\n                    // We cant send to that token - might not be registred\n                    // ask the user to remove the token from the list\n                    if (result.failure !== 0 && userToken) {\n\n                        // This is an old device, token is replaced\n                        Fiber(function(self) {\n                            // Run in fiber\n                            try {\n                                self.callback(self.token);\n                            } catch(err) {\n\n                            }\n\n                        }).run({\n                            token: { gcm: userToken },\n                            callback: _removeToken\n                        });\n                        //_replaceToken({ gcm: userToken }, { gcm: result.results[0].registration_id });\n\n                    }\n\n                }\n            });\n            // /** Use the following line if you want to send the message without retries\n            // sender.sendNoRetry(message, userTokens, function (result) {\n            //     console.log('ANDROID: ' + JSON.stringify(result));\n            // });\n            // **/\n        }; // EO sendAndroid\n\n    } // EO Android\n\n    // Universal send function\n    var _querySend = function(query, options) {\n\n      var countApn = [];\n      var countGcm = [];\n\n        Push.appCollection.find(query).forEach(function(app) {\n\n          if (Push.debug) {\n            console.log('send to token', app.token);\n          }\n\n            if (app.token.apn) {\n              countApn.push(app._id);\n                // Send to APN\n                if (self.sendAPN) {\n                  self.sendAPN(app.token.apn, options);\n                }\n\n            } else if (app.token.gcm) {\n              countGcm.push(app._id);\n\n                // Send to GCM\n                // We do support multiple here - so we should construct an array\n                // and send it bulk - Investigate limit count of id's\n                if (self.sendGCM) {\n                  self.sendGCM(app.token.gcm, options);\n                }\n\n            } else {\n                throw new Error('Push.send got a faulty query');\n            }\n\n        });\n\n        if (Push.debug) {\n\n          console.log('Push: Sent message \"' + options.title + '\" to ' + countApn.length + ' ios apps ' +\n            countGcm.length + ' android apps');\n\n          // Add some verbosity about the send result, making sure the developer\n          // understands what just happened.\n          if (!countApn.length && !countGcm.length) {\n            if (Push.appCollection.find().count() === 0) {\n              console.log('Push, GUIDE: The \"Push.appCollection\" is empty -' +\n                ' No clients have registred on the server yet...');\n            }\n          } else if (!countApn.length) {\n            if (Push.appCollection.find({ 'token.apn': { $exists: true } }).count() === 0) {\n              console.log('Push, GUIDE: The \"Push.appCollection\" - No APN clients have registred on the server yet...');\n            }\n          } else if (!countGcm.length) {\n            if (Push.appCollection.find({ 'token.gcm': { $exists: true } }).count() === 0) {\n              console.log('Push, GUIDE: The \"Push.appCollection\" - No GCM clients have registred on the server yet...');\n            }\n          }\n\n        }\n\n        return {\n          apn: countApn,\n          gcm: countGcm\n        };\n    };\n\n    self.serverSend = function(options) {\n      options = options || { badge: 0 };\n      var query;\n\n      // Check basic options\n      if (options.from !== ''+options.from) {\n        throw new Error('Push.send: option \"from\" not a string');\n      }\n\n      if (options.title !== ''+options.title) {\n        throw new Error('Push.send: option \"title\" not a string');\n      }\n\n      if (options.text !== ''+options.text) {\n        throw new Error('Push.send: option \"text\" not a string');\n      }\n\n      if (options.token || options.tokens) {\n\n        // The user set one token or array of tokens\n        var tokenList = (options.token)? [options.token] : options.tokens;\n\n        if (Push.debug) {\n          console.log('Push: Send message \"' + options.title + '\" via token(s)', tokenList);\n        }\n\n        query = {\n          $or: [\n              // XXX: Test this query: can we hand in a list of push tokens?\n              { $and: [\n                  { token: { $in: tokenList } },\n                  // And is not disabled\n                  { enabled: { $ne: false }}\n                ]\n              },\n              // XXX: Test this query: does this work on app id?\n              { $and: [\n                  { _in: { $in: tokenList } }, // one of the app ids\n                  { $or: [\n                      { 'token.apn': { $exists: true }  }, // got apn token\n                      { 'token.gcm': { $exists: true }  }  // got gcm token\n                  ]},\n                  // And is not disabled\n                  { enabled: { $ne: false }}\n                ]\n              }\n          ]\n        };\n\n      } else if (options.query) {\n\n        if (Push.debug) {\n          console.log('Push: Send message \"' + options.title + '\" via query', options.query);\n        }\n\n        query = {\n          $and: [\n              options.query, // query object\n              { $or: [\n                  { 'token.apn': { $exists: true }  }, // got apn token\n                  { 'token.gcm': { $exists: true }  }  // got gcm token\n              ]},\n              // And is not disabled\n              { enabled: { $ne: false }}\n          ]\n        };\n      }\n\n\n      if (query) {\n\n        // Convert to querySend and return status\n        return _querySend(query, options);\n\n      } else {\n        throw new Error('Push.send: please set option \"token\"/\"tokens\" or \"query\"');\n      }\n\n    };\n\n\n    // This interval will allow only one notification to be sent at a time, it\n    // will check for new notifications at every `options.sendInterval`\n    // (default interval is 15000 ms)\n    //\n    // It looks in notifications collection to see if theres any pending\n    // notifications, if so it will try to reserve the pending notification.\n    // If successfully reserved the send is started.\n    //\n    // If notification.query is type string, it's assumed to be a json string\n    // version of the query selector. Making it able to carry `$` properties in\n    // the mongo collection.\n    //\n    // Pr. default notifications are removed from the collection after send have\n    // completed. Setting `options.keepNotifications` will update and keep the\n    // notification eg. if needed for historical reasons.\n    //\n    // After the send have completed a \"send\" event will be emitted with a\n    // status object containing notification id and the send result object.\n    //\n    var isSendingNotification = false;\n\n    if (options.sendInterval !== null) {\n\n      // This will require index since we sort notifications by createdAt\n      Push.notifications._ensureIndex({ createdAt: 1 });\n\n      Meteor.setInterval(function() {\n\n          if (isSendingNotification) {\n              return;\n          }\n          // Set send fence\n          isSendingNotification = true;\n\n          // var countSent = 0;\n          var batchSize = options.sendBatchSize || 1;\n\n          // Find notifications that are not being or already sent\n          var pendingNotifications = Push.notifications.find({ $and: [\n                // Message is not sent\n                { sent : { $ne: true } },\n                // And not being sent by other instances\n                { sending: { $ne: true } },\n                // And not queued for future\n                { $or: [ { delayUntil: { $exists: false } }, { delayUntil:  { $lte: new Date() } } ] }\n            ]}, {\n              // Sort by created date\n              sort: { createdAt: 1 },\n              limit: batchSize\n            });\n\n          pendingNotifications.forEach(function(notification) {\n              // Reserve notification\n              var reserved = Push.notifications.update({ $and: [\n                // Try to reserve the current notification\n                { _id: notification._id },\n                // Make sure no other instances have reserved it\n                { sending: { $ne: true } }\n              ]}, {\n                $set: {\n                  // Try to reserve\n                  sending: true\n                }\n              });\n\n              // Make sure we only handle notifications reserved by this\n              // instance\n              if (reserved) {\n\n                // Check if query is set and is type String\n                if (notification.query && notification.query === ''+notification.query) {\n                  try {\n                    // The query is in string json format - we need to parse it\n                    notification.query = JSON.parse(notification.query);\n                  } catch(err) {\n                    // Did the user tamper with this??\n                    throw new Error('Push: Error while parsing query string, Error: ' + err.message);\n                  }\n                }\n\n                // Send the notification\n                var result = Push.serverSend(notification);\n\n                if (!options.keepNotifications) {\n                    // Pr. Default we will remove notifications\n                    Push.notifications.remove({ _id: notification._id });\n                } else {\n\n                    // Update the notification\n                    Push.notifications.update({ _id: notification._id }, {\n                        $set: {\n                          // Mark as sent\n                          sent: true,\n                          // Set the sent date\n                          sentAt: new Date(),\n                          // Count\n                          count: result,\n                          // Not being sent anymore\n                          sending: false\n                        }\n                    });\n\n                }\n\n                // Emit the send\n                self.emit('send', { notification: notification._id, result: result });\n\n              } // Else could not reserve\n\n          }); // EO forEach\n\n          // Remove the send fence\n          isSendingNotification = false;\n      }, options.sendInterval || 15000); // Default every 15th sec\n\n    } else {\n      if (Push.debug) {\n        console.log('Push: Send server is disabled');\n      }\n    }\n\n};\n","Push.appCollection = new Mongo.Collection('_raix_push_app_tokens');\n\nPush.addListener('token', function(currentToken, value) {\n  if (value) {\n    // Update the token for app\n    Push.appCollection.update({ token: currentToken }, { $set: { token: value } }, { multi: true });\n  } else if (value === null) {\n    // Remove the token for app\n    Push.appCollection.update({ token: currentToken }, { $unset: { token: true } }, { multi: true });\n  }\n});\n\nMeteor.methods({\n  'raix:push-update': function(options) {\n    if (Push.debug) {\n      console.log('Push: Got push token from app:', options);\n    }\n\n    check(options, {\n      id: Match.Optional(String),\n      token: _matchToken,\n      appName: String,\n      userId: Match.OneOf(String, null),\n      metadata: Match.Optional(Object)\n    });\n\n    // The if user id is set then user id should match on client and connection\n    if (options.userId && options.userId !== this.userId) {\n      throw new Meteor.Error(403, 'Forbidden access');\n    }\n\n    var doc;\n\n    // lookup app by id if one was included\n    if (options.id) {\n      doc = Push.appCollection.findOne({ _id: options.id });\n    }\n\n    // No doc was found - we check the database to see if\n    // we can find a match for the app via token and appName\n    if (!doc) {\n      doc = Push.appCollection.findOne({\n        $and: [\n          { token: options.token },     // Match token\n          { appName: options.appName }, // Match appName\n          { token: { $exists: true } }  // Make sure token exists\n        ]\n      });\n    }\n\n    // if we could not find the id or token then create it\n    if (!doc) {\n      // Rig default doc\n      doc = {\n        token: options.token,\n        appName: options.appName,\n        userId: options.userId,\n        enabled: true,\n        createdAt: new Date(),\n        updatedAt: new Date()\n      };\n\n      if (options.id) {\n        // XXX: We might want to check the id - Why isnt there a match for id\n        // in the Meteor check... Normal length 17 (could be larger), and\n        // numbers+letters are used in Random.id() with exception of 0 and 1\n        doc._id = options.id;\n        // The user wanted us to use a specific id, we didn't find this while\n        // searching. The client could depend on the id eg. as reference so\n        // we respect this and try to create a document with the selected id;\n        Push.appCollection._collection.insert(doc);\n      } else {\n        // Get the id from insert\n        doc._id = Push.appCollection.insert(doc);\n      }\n    } else {\n      // We found the app so update the updatedAt and set the token\n      Push.appCollection.update({ _id: doc._id }, {\n        $set: {\n          updatedAt: new Date(),\n          token: options.token\n        }\n      });\n    }\n\n    if (doc) {\n      // xxx: Hack\n      // Clean up mech making sure tokens are uniq - android sometimes generate\n      // new tokens resulting in duplicates\n      var removed = Push.appCollection.remove({\n        $and: [\n          { _id: { $ne: doc._id } },\n          { token: doc.token },     // Match token\n          { appName: doc.appName }, // Match appName\n          { token: { $exists: true } }  // Make sure token exists\n        ]\n      });\n\n      if (removed && Push.debug) {\n        console.log('Push: Removed ' + removed + ' existing app items');\n      }\n    }\n\n    if (doc && Push.debug) {\n      console.log('Push: updated', doc);\n    }\n\n    if (!doc) {\n      throw new Meteor.Error(500, 'setPushToken could not create record');\n    }\n    // Return the doc we want to use\n    return doc;\n  },\n  'raix:push-setuser': function(id) {\n    check(id, String);\n\n    if (Push.debug) {\n      console.log('Push: Settings userId \"' + this.userId + '\" for app:', id);\n    }\n    // We update the appCollection id setting the Meteor.userId\n    var found = Push.appCollection.update({ _id: id }, { $set: { userId: this.userId } });\n\n    // Note that the app id might not exist because no token is set yet.\n    // We do create the new app id for the user since we might store additional\n    // metadata for the app / user\n\n    // If id not found then create it?\n    // We dont, its better to wait until the user wants to\n    // store metadata or token - We could end up with unused data in the\n    // collection at every app re-install / update\n    //\n    // The user could store some metadata in appCollectin but only if they\n    // have created the app and provided a token.\n    // If not the metadata should be set via ground:db\n\n    return !!found;\n  },\n  'raix:push-metadata': function(data) {\n    check(data, {\n      id: String,\n      metadata: Object\n    });\n\n    // Set the metadata\n    var found = Push.appCollection.update({ _id: data.id }, { $set: { metadata: data.metadata } });\n\n    return !!found;\n  },\n  'raix:push-enable': function(data) {\n    check(data, {\n      id: String,\n      enabled: Boolean\n    });\n\n    if (Push.debug) {\n      console.log('Push: Setting enabled to \"' + data.enabled + '\" for app:', data.id);\n    }\n\n    var found = Push.appCollection.update({ _id: data.id }, { $set: { enabled: data.enabled } });\n\n    return !!found;\n  }\n});\n\n"]}