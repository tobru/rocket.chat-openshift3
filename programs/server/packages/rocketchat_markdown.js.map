{"version":3,"sources":["meteor://ðŸ’»app/packages/rocketchat_markdown/settings.coffee","meteor://ðŸ’»app/packages/rocketchat_markdown/markdown.coffee","meteor://ðŸ’»app/packages/rocketchat_markdown/markdowncode.coffee"],"names":[],"mappings":"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","file":"/packages/rocketchat_markdown.js","sourcesContent":["Meteor.startup ->\n  RocketChat.settings.add 'Markdown_Headers', false, {type: 'boolean', group: 'Message', section: 'Markdown', public: true}\n  RocketChat.settings.add 'Markdown_SupportSchemesForLink', 'http,https', {type: 'string', group: 'Message', section: 'Markdown', public: true, i18nDescription: 'Markdown_SupportSchemesForLink_Description'}\n","###\n# Markdown is a named function that will parse markdown syntax\n# @param {Object} message - The message object\n###\n\nclass Markdown\n\tconstructor: (message) ->\n\t\tmsg = message\n\n\t\tif not _.isString message\n\t\t\tif _.trim message?.html\n\t\t\t\tmsg = message.html\n\t\t\telse\n\t\t\t\treturn message\n\n\t\tschemes = RocketChat.settings.get('Markdown_SupportSchemesForLink').split(',').join('|')\n\n\t\t# Support ![alt text](http://image url)\n\t\tmsg = msg.replace(new RegExp(\"!\\\\[([^\\\\]]+)\\\\]\\\\(((?:#{schemes}):\\\\/\\\\/[^\\\\)]+)\\\\)\", 'gm'), '<a href=\"$2\" title=\"$1\" class=\"swipebox\" target=\"_blank\"><div class=\"inline-image\" style=\"background-image: url($2);\"></div></a>')\n\n\t\t# Support [Text](http://link)\n\t\tmsg = msg.replace(new RegExp(\"\\\\[([^\\\\]]+)\\\\]\\\\(((?:#{schemes}):\\\\/\\\\/[^\\\\)]+)\\\\)\", 'gm'), '<a href=\"$2\" target=\"_blank\">$1</a>')\n\n\t\t# Support <http://link|Text>\n\t\tmsg = msg.replace(new RegExp(\"(?:<|&lt;)((?:#{schemes}):\\\\/\\\\/[^\\\\|]+)\\\\|(.+?)(?=>|&gt;)(?:>|&gt;)\", 'gm'), '<a href=\"$1\" target=\"_blank\">$2</a>')\n\n\t\tif RocketChat.settings.get('Markdown_Headers')\n\t\t\t# Support # Text for h1\n\t\t\tmsg = msg.replace(/^# (([\\S\\w\\d-_\\/\\*\\.,\\\\][ \\u00a0\\u1680\\u180e\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff]?)+)/gm, '<h1>$1</h1>')\n\n\t\t\t# Support # Text for h2\n\t\t\tmsg = msg.replace(/^## (([\\S\\w\\d-_\\/\\*\\.,\\\\][ \\u00a0\\u1680\\u180e\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff]?)+)/gm, '<h2>$1</h2>')\n\n\t\t\t# Support # Text for h3\n\t\t\tmsg = msg.replace(/^### (([\\S\\w\\d-_\\/\\*\\.,\\\\][ \\u00a0\\u1680\\u180e\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff]?)+)/gm, '<h3>$1</h3>')\n\n\t\t\t# Support # Text for h4\n\t\t\tmsg = msg.replace(/^#### (([\\S\\w\\d-_\\/\\*\\.,\\\\][ \\u00a0\\u1680\\u180e\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff]?)+)/gm, '<h4>$1</h4>')\n\n\t\t# Support *text* to make bold\n\t\tmsg = msg.replace(/(^|&gt;|[ >_~`])\\*{1,2}([^\\*\\r\\n]+)\\*{1,2}([<_~`]|\\B|\\b|$)/gm, '$1<span class=\"copyonly\">*</span><strong>$2</strong><span class=\"copyonly\">*</span>$3')\n\n\t\t# Support _text_ to make italics\n\t\tmsg = msg.replace(/(^|&gt;|[ >*~`])\\_([^\\_\\r\\n]+)\\_([<*~`]|\\B|\\b|$)/gm, '$1<span class=\"copyonly\">_</span><em>$2</em><span class=\"copyonly\">_</span>$3')\n\n\t\t# Support ~text~ to strike through text\n\t\tmsg = msg.replace(/(^|&gt;|[ >_*`])\\~{1,2}([^~\\r\\n]+)\\~{1,2}([<_*`]|\\B|\\b|$)/gm, '$1<span class=\"copyonly\">~</span><strike>$2</strike><span class=\"copyonly\">~</span>$3')\n\n\t\t# Support for block quote\n\t\t# >>>\n\t\t# Text\n\t\t# <<<\n\t\tmsg = msg.replace(/(?:&gt;){3}\\n+([\\s\\S]*?)\\n+(?:&lt;){3}/g, '<blockquote><span class=\"copyonly\">&gt;&gt;&gt;</span>$1<span class=\"copyonly\">&lt;&lt;&lt;</span></blockquote>')\n\n\t\t# Support >Text for quote\n\t\tmsg = msg.replace(/^&gt;(.*)$/gm, '<blockquote><span class=\"copyonly\">&gt;</span>$1</blockquote>')\n\n\t\t# Remove white-space around blockquote (prevent <br>). Because blockquote is block element.\n\t\tmsg = msg.replace(/\\s*<blockquote>/gm, '<blockquote>')\n\t\tmsg = msg.replace(/<\\/blockquote>\\s*/gm, '</blockquote>')\n\n\t\t# Remove new-line between blockquotes.\n\t\tmsg = msg.replace(/<\\/blockquote>\\n<blockquote>/gm, '</blockquote><blockquote>')\n\n\t\tif not _.isString message\n\t\t\tmessage.html = msg\n\t\telse\n\t\t\tmessage = msg\n\n\t\tconsole.log 'Markdown', message if window?.rocketDebug\n\n\t\treturn message\n\n\nRocketChat.Markdown = Markdown\nRocketChat.callbacks.add 'renderMessage', Markdown    , RocketChat.callbacks.priority.HIGH\n\nif Meteor.isClient\n\tBlaze.registerHelper 'RocketChatMarkdown', (text) ->\n\t\treturn RocketChat.Markdown text\n","###\n# MarkdownCode is a named function that will parse `inline code` and ```codeblock``` syntaxes\n# @param {Object} message - The message object\n###\n\nclass MarkdownCode\n\tconstructor: (message) ->\n\n\t\tif s.trim message.html\n\t\t\tmessage.tokens ?= []\n\n\t\t\tMarkdownCode.handle_codeblocks message\n\t\t\tMarkdownCode.handle_inlinecode message\n\n\t\t\tconsole.log 'Markdown', message if window?.rocketDebug\n\n\t\treturn message\n\n\t@handle_inlinecode: (message) ->\n\t\t# Support `text`\n\t\tmessage.html = message.html.replace /(^|&gt;|[ >_*~])\\`([^`\\r\\n]+)\\`([<_*~]|\\B|\\b|$)/gm, (match, p1, p2, p3, offset, text) ->\n\t\t\ttoken = \"=&=#{Random.id()}=&=\"\n\n\t\t\tmessage.tokens.push\n\t\t\t\ttoken: token\n\t\t\t\ttext: \"#{p1}<span class=\\\"copyonly\\\">`</span><span><code class=\\\"inline\\\">#{p2}</code></span><span class=\\\"copyonly\\\">`</span>#{p3}\"\n\n\t\t\treturn token\n\n\n\t@handle_codeblocks: (message) ->\n\t\t# Count occurencies of ```\n\t\tcount = (message.html.match(/```/g) || []).length\n\n\t\tif count\n\n\t\t\t# Check if we need to add a final ```\n\t\t\tif (count % 2 > 0)\n\t\t\t\tmessage.html = message.html + \"\\n```\"\n\t\t\t\tmessage.msg = message.msg + \"\\n```\"\n\n\t\t\t# Separate text in code blocks and non code blocks\n\t\t\tmsgParts = message.html.split(/^\\s*(```(?:[a-zA-Z]+)?(?:(?:.|\\n)*?)```)(?:\\n)?$/gm)\n\n\t\t\tfor part, index in msgParts\n\t\t\t\t# Verify if this part is code\n\t\t\t\tcodeMatch = part.match(/^```(\\w*[\\n\\ ]?)([\\s\\S]*?)```+?$/)\n\n\t\t\t\tif codeMatch?\n\t\t\t\t\t# Process highlight if this part is code\n\t\t\t\t\tsingleLine = codeMatch[0].indexOf('\\n') is -1\n\n\t\t\t\t\tif singleLine\n\t\t\t\t\t\tlang = ''\n\t\t\t\t\t\tcode = _.unescapeHTML codeMatch[1] + codeMatch[2]\n\t\t\t\t\telse\n\t\t\t\t\t\tlang = codeMatch[1]\n\t\t\t\t\t\tcode = _.unescapeHTML codeMatch[2]\n\n\t\t\t\t\tif s.trim(lang) is ''\n\t\t\t\t\t\tlang = ''\n\n\t\t\t\t\tif s.trim(lang) not in hljs.listLanguages()\n\t\t\t\t\t\tresult = hljs.highlightAuto (lang + code)\n\t\t\t\t\telse\n\t\t\t\t\t\tresult = hljs.highlight s.trim(lang), code\n\n\t\t\t\t\ttoken = \"=&=#{Random.id()}=&=\"\n\n\t\t\t\t\tmessage.tokens.push\n\t\t\t\t\t\thighlight: true\n\t\t\t\t\t\ttoken: token\n\t\t\t\t\t\ttext: \"<pre><code class='hljs \" + result.language + \"'><span class='copyonly'>```<br></span>\" + result.value + \"<span class='copyonly'><br>```</span></code></pre>\"\n\n\t\t\t\t\tmsgParts[index] = token\n\t\t\t\telse\n\t\t\t\t\tmsgParts[index] = part\n\n\t\t\t# Re-mount message\n\t\t\tmessage.html = msgParts.join('')\n\nRocketChat.MarkdownCode = MarkdownCode\n\n# MarkdownCode gets higher priority over Markdown so it's possible place a callback in between (katex for exmaple)\nRocketChat.callbacks.add 'renderMessage', MarkdownCode, RocketChat.callbacks.priority.HIGH - 2\n"]}