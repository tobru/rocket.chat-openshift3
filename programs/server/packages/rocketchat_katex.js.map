{"version":3,"sources":["meteor://ðŸ’»app/packages/rocketchat_katex/settings.coffee","meteor://ðŸ’»app/packages/rocketchat_katex/katex.coffee"],"names":[],"mappings":"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","file":"/packages/rocketchat_katex.js","sourcesContent":["Meteor.startup ->\n  enableQuery = {_id: 'Katex_Enabled', value: true}\n  RocketChat.settings.add 'Katex_Enabled', true, {type: 'boolean', group: 'Message', section: 'Katex', public: true, i18n: 'Katex_Enabled_Description'}\n\n  RocketChat.settings.add 'Katex_Parenthesis_Syntax', true, {type: 'boolean', group: 'Message', section: 'Katex', public: true, enableQuery, i18nDescription: 'Katex_Parenthesis_Syntax_Description'}\n  RocketChat.settings.add 'Katex_Dollar_Syntax', false, {type: 'boolean', group: 'Message', section: 'Katex', public: true, enableQuery, i18nDescription: 'Katex_Dollar_Syntax_Description'}\n","###\n# KaTeX is a fast, easy-to-use JavaScript library for TeX math rendering on the web.\n# https://github.com/Khan/KaTeX\n###\nclass Katex\n\tconstructor: ->\n\t\t@delimiters_map = [\n\t\t\t{ opener: '\\\\[', closer: '\\\\]', displayMode: true , enabled: () => @parenthesis_syntax_enabled() },\n\t\t\t{ opener: '\\\\(', closer: '\\\\)', displayMode: false, enabled: () => @parenthesis_syntax_enabled() },\n\t\t\t{ opener: '$$' , closer: '$$' , displayMode: true , enabled: () => @dollar_syntax_enabled() },\n\t\t\t{ opener: '$'  , closer: '$'  , displayMode: false, enabled: () => @dollar_syntax_enabled() },\n\t\t]\n\n\t# Searches for the first opening delimiter in the string from a given position\n\tfind_opening_delimiter: (str, start) -> # Search the string for each opening delimiter\n\t\tmatches = ({options: o, pos: str.indexOf(o.opener, start)} for o in @delimiters_map when o.enabled())\n\t\tpositions = (m.pos for m in matches when m.pos >= 0)\n\n\t\t# No opening delimiters were found\n\t\tif positions.length == 0\n\t\t\treturn null\n\n\t\t# Take the first delimiter found\n\t\tpos = Math.min.apply Math, positions\n\n\t\tmatch_index = (m.pos for m in matches).indexOf(pos)\n\t\tmatch = matches[match_index]\n\n\t\treturn match\n\n\tclass Boundary\n\t\tlength: ->\n\t\t\treturn @end - @start\n\n\t\textract: (str) ->\n\t\t\treturn str.substr @start, @length()\n\n\t# Returns the outer and inner boundaries of the latex block starting\n\t# at the given opening delimiter\n\tget_latex_boundaries: (str, opening_delimiter_match) ->\n\t\tinner = new Boundary\n\t\touter = new Boundary\n\n\t\t# The closing delimiter matching to the opening one\n\t\tcloser = opening_delimiter_match.options.closer\n\n\t\touter.start = opening_delimiter_match.pos\n\t\tinner.start = opening_delimiter_match.pos + closer.length\n\n\t\t# Search for a closer delimiter after the opening one\n\t\tcloser_index = str.substr(inner.start).indexOf(closer)\n\t\tif closer_index < 0\n\t\t\treturn null\n\n\t\tinner.end = inner.start + closer_index\n\t\touter.end = inner.end + closer.length\n\n\t\treturn {\n\t\t\touter: outer\n\t\t\tinner: inner\n\t\t}\n\n\t# Searches for the first latex block in the given string\n\tfind_latex: (str) ->\n\t\tstart = 0\n\t\twhile (opening_delimiter_match = @find_opening_delimiter str, start++)?\n\n\t\t\tmatch = @get_latex_boundaries str, opening_delimiter_match\n\n\t\t\tif match?.inner.extract(str).trim().length\n\t\t\t\tmatch.options = opening_delimiter_match.options\n\t\t\t\treturn match\n\n\t\treturn null\n\n\t# Breaks a message to what comes before, after and to the content of a\n\t# matched latex block\n\textract_latex: (str, match) ->\n\t\tbefore = str.substr 0, match.outer.start\n\t\tafter  = str.substr match.outer.end\n\n\t\tlatex = match.inner.extract str\n\t\tlatex = s.unescapeHTML latex\n\n\t\treturn { before: before, latex : latex, after : after }\n\n\t# Takes a latex math string and the desired display mode and renders it\n\t# to HTML using the KaTeX library\n\trender_latex: (latex, displayMode) ->\n\t\ttry\n\t\t\trendered = katex.renderToString latex , {displayMode: displayMode}\n\t\tcatch e\n\t\t\tdisplay_mode = if displayMode then \"block\" else \"inline\"\n\t\t\trendered =  \"<div class=\\\"katex-error katex-#{display_mode}-error\\\">\"\n\t\t\trendered += \t\"#{s.escapeHTML e.message}\"\n\t\t\trendered += \"</div>\"\n\n\t\treturn rendered\n\n\t# Takes a string and renders all latex blocks inside it\n\trender: (str, render_func) ->\n\t\tresult = ''\n\n\t\tloop\n\n\t\t\t# Find the first latex block in the string\n\t\t\tmatch = @find_latex str\n\n\t\t\tunless match?\n\t\t\t\tresult += str\n\t\t\t\tbreak\n\n\t\t\tparts = @extract_latex str, match\n\n\t\t\t# Add to the reuslt what comes before the latex block as well as\n\t\t\t# the rendered latex content\n\t\t\trendered = render_func parts.latex, match.options.displayMode\n\t\t\tresult += parts.before + rendered\n\n\t\t\t# Set what comes after the latex block to be examined next\n\t\t\tstr = parts.after\n\n\t\treturn result\n\n\t# Takes a rocketchat message and renders latex in its content\n\trender_message: (message) ->\n\t\t# Render only if enabled in admin panel\n\t\tif @katex_enabled()\n\t\t\tmsg = message\n\n\t\t\tif not _.isString message\n\t\t\t\tif _.trim message.html\n\t\t\t\t\tmsg = message.html\n\t\t\t\telse\n\t\t\t\t\treturn message\n\n\t\t\tif _.isString message\n\t\t\t\trender_func = (latex, displayMode) =>\n\t\t\t\t\treturn @render_latex latex, displayMode\n\t\t\telse\n\t\t\t\tmessage.tokens ?= []\n\n\t\t\t\trender_func = (latex, displayMode) =>\n\t\t\t\t\ttoken = \"=&=#{Random.id()}=&=\"\n\n\t\t\t\t\tmessage.tokens.push\n\t\t\t\t\t\ttoken: token\n\t\t\t\t\t\ttext: @render_latex latex, displayMode\n\n\t\t\t\t\treturn token\n\n\t\t\tmsg = @render msg, render_func\n\n\t\t\tif not _.isString message\n\t\t\t\tmessage.html = msg\n\t\t\telse\n\t\t\t\tmessage = msg\n\n\t\treturn message\n\n\tkatex_enabled: ->\n\t\treturn RocketChat.settings.get('Katex_Enabled')\n\n\tdollar_syntax_enabled: ->\n\t\treturn RocketChat.settings.get('Katex_Dollar_Syntax')\n\n\tparenthesis_syntax_enabled: ->\n\t\treturn RocketChat.settings.get('Katex_Parenthesis_Syntax')\n\n\nRocketChat.katex = new Katex\n\ncb = RocketChat.katex.render_message.bind(RocketChat.katex)\nRocketChat.callbacks.add 'renderMessage', cb, RocketChat.callbacks.priority.HIGH - 1\n\nif Meteor.isClient\n\tBlaze.registerHelper 'RocketChatKatex', (text) ->\n\t\treturn RocketChat.katex.render_message text\n"]}