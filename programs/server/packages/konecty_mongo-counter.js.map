{"version":3,"sources":["meteor://ðŸ’»app/packages/konecty_mongo-counter/packages/konecty_mongo-counter.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H","file":"/packages/konecty_mongo-counter.js","sourcesContent":["(function () {\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// packages/konecty:mongo-counter/counter.coffee.js                                                                 //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\n__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\nvar callCounter, getCounterCollection, _decrementCounter, _deleteCounters, _incrementCounter, _setCounter,                                                                \n  __slice = [].slice;\n\ngetCounterCollection = function(collection) {\n  return collection.rawCollection();\n};\n\ncallCounter = function() {\n  var Counters, args, collection, future, method, _ref;\n  method = arguments[0], collection = arguments[1], args = 3 <= arguments.length ? __slice.call(arguments, 2) : [];\n  Counters = getCounterCollection(collection);\n  if (Meteor.wrapAsync != null) {\n    return Meteor.wrapAsync(_.bind(Counters[method], Counters)).apply(null, args);\n  } else {\n    future = new (Npm.require(Npm.require('path').join('fibers', 'future')))();\n    (_ref = Counters[method]).call.apply(_ref, [Counters].concat(__slice.call(args), [future.resolver()]));\n    return future.wait();\n  }\n};\n\n_deleteCounters = function(collection) {\n  return callCounter('remove', collection, {}, {\n    safe: true\n  });\n};\n\n_incrementCounter = function(collection, counterName, amount) {\n  var newDoc;\n  if (amount == null) {\n    amount = 1;\n  }\n  newDoc = callCounter('findAndModify', collection, {\n    _id: counterName\n  }, null, {\n    $inc: {\n      next_val: amount\n    }\n  }, {\n    \"new\": true,\n    upsert: true\n  });\n  return newDoc.next_val;\n};\n\n_decrementCounter = function(collection, counterName, amount) {\n  if (amount == null) {\n    amount = 1;\n  }\n  return _incrementCounter(collection, counterName, -amount);\n};\n\n_setCounter = function(collection, counterName, value) {\n  callCounter('update', collection, {\n    _id: counterName\n  }, {\n    $set: {\n      next_val: value\n    }\n  });\n};\n\nif (typeof Package !== \"undefined\" && Package !== null) {\n  incrementCounter = _incrementCounter;\n  decrementCounter = _decrementCounter;\n  setCounter = _setCounter;\n  deleteCounters = _deleteCounters;\n} else {\n  this.incrementCounter = _incrementCounter;\n  this.decrementCounter = _decrementCounter;\n  this.setCounter = _setCounter;\n  this.deleteCounters = _deleteCounters;\n}\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n"]}