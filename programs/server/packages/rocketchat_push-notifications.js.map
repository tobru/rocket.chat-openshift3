{"version":3,"sources":["meteor://ðŸ’»app/server/methods/saveNotificationSettings.js","meteor://ðŸ’»app/server/models/Subscriptions.js"],"names":[],"mappings":"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","file":"/packages/rocketchat_push-notifications.js","sourcesContent":["Meteor.methods({\n\tsaveNotificationSettings: function(rid, field, value) {\n\t\tif (!Meteor.userId()) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'saveNotificationSettings' });\n\t\t}\n\n\t\tcheck(rid, String);\n\t\tcheck(field, String);\n\t\tcheck(value, String);\n\n\t\tif (['desktopNotifications', 'mobilePushNotifications', 'emailNotifications'].indexOf(field) === -1) {\n\t\t\tthrow new Meteor.Error('error-invalid-settings', 'Invalid settings field', { method: 'saveNotificationSettings' });\n\t\t}\n\n\t\tif (['all', 'mentions', 'nothing', 'default'].indexOf(value) === -1) {\n\t\t\tthrow new Meteor.Error('error-invalid-settings', 'Invalid settings value', { method: 'saveNotificationSettings' });\n\t\t}\n\n\t\tconst subscription = RocketChat.models.Subscriptions.findOneByRoomIdAndUserId(rid, Meteor.userId());\n\t\tif (!subscription) {\n\t\t\tthrow new Meteor.Error('error-invalid-subscription', 'Invalid subscription', { method: 'saveNotificationSettings' });\n\t\t}\n\n\t\tif (field === 'desktopNotifications') {\n\t\t\tRocketChat.models.Subscriptions.updateDesktopNotificationsById(subscription._id, value);\n\t\t} else if (field === 'mobilePushNotifications') {\n\t\t\tRocketChat.models.Subscriptions.updateMobilePushNotificationsById(subscription._id, value);\n\t\t} else if (field === 'emailNotifications') {\n\t\t\tRocketChat.models.Subscriptions.updateEmailNotificationsById(subscription._id, value);\n\t\t}\n\n\t\treturn true;\n\t},\n\n\tsaveDesktopNotificationDuration: function(rid, value) {\n\t\tconst subscription = RocketChat.models.Subscriptions.findOneByRoomIdAndUserId(rid, Meteor.userId());\n\t\tif (!subscription) {\n\t\t\tthrow new Meteor.Error('error-invalid-subscription', 'Invalid subscription', { method: 'saveDesktopNotificationDuration' });\n\t\t}\n\t\tRocketChat.models.Subscriptions.updateDesktopNotificationDurationById(subscription._id, value);\n\t\treturn true;\n\t}\n});\n","RocketChat.models.Subscriptions.updateDesktopNotificationsById = function(_id, desktopNotifications) {\n\tconst query = {\n\t\t_id: _id\n\t};\n\n\tconst update = {\n\t\t$set: {\n\t\t\tdesktopNotifications: desktopNotifications\n\t\t}\n\t};\n\n\treturn this.update(query, update);\n};\n\nRocketChat.models.Subscriptions.updateDesktopNotificationDurationById = function(_id, value) {\n\tconst query = {\n\t\t_id: _id\n\t};\n\n\tconst update = {\n\t\t$set: {\n\t\t\tdesktopNotificationDuration: value - 0\n\t\t}\n\t};\n\n\treturn this.update(query, update);\n};\n\nRocketChat.models.Subscriptions.updateMobilePushNotificationsById = function(_id, mobilePushNotifications) {\n\tconst query = {\n\t\t_id: _id\n\t};\n\n\tconst update = {\n\t\t$set: {\n\t\t\tmobilePushNotifications: mobilePushNotifications\n\t\t}\n\t};\n\n\treturn this.update(query, update);\n};\n\nRocketChat.models.Subscriptions.updateEmailNotificationsById = function(_id, emailNotifications) {\n\tconst query = {\n\t\t_id: _id\n\t};\n\n\tconst update = {\n\t\t$set: {\n\t\t\temailNotifications: emailNotifications\n\t\t}\n\t};\n\n\treturn this.update(query, update);\n};\n\nRocketChat.models.Subscriptions.findAlwaysNotifyDesktopUsersByRoomId = function(roomId) {\n\tconst query = {\n\t\trid: roomId,\n\t\tdesktopNotifications: 'all'\n\t};\n\n\treturn this.find(query);\n};\n\nRocketChat.models.Subscriptions.findDontNotifyDesktopUsersByRoomId = function(roomId) {\n\tconst query = {\n\t\trid: roomId,\n\t\tdesktopNotifications: 'nothing'\n\t};\n\n\treturn this.find(query);\n};\n\nRocketChat.models.Subscriptions.findAlwaysNotifyMobileUsersByRoomId = function(roomId) {\n\tconst query = {\n\t\trid: roomId,\n\t\tmobilePushNotifications: 'all'\n\t};\n\n\treturn this.find(query);\n};\n\nRocketChat.models.Subscriptions.findDontNotifyMobileUsersByRoomId = function(roomId) {\n\tconst query = {\n\t\trid: roomId,\n\t\tmobilePushNotifications: 'nothing'\n\t};\n\n\treturn this.find(query);\n};\n\nRocketChat.models.Subscriptions.findNotificationPreferencesByRoom = function(roomId) {\n\tconst query = {\n\t\trid: roomId,\n\t\t'u._id': {$exists: true},\n\t\t$or: [\n\t\t\t{desktopNotifications: {$exists: true}},\n\t\t\t{desktopNotificationDuration: {$exists: true}},\n\t\t\t{mobilePushNotifications: {$exists: true}}\n\t\t]\n\t};\n\n\treturn this.find(query);\n};\n\nRocketChat.models.Subscriptions.findWithSendEmailByRoomId = function(roomId) {\n\tvar query = {\n\t\trid: roomId,\n\t\temailNotifications: {\n\t\t\t$exists: true\n\t\t}\n\t};\n\n\treturn this.find(query, { fields: { emailNotifications: 1, u: 1 } });\n};\n"]}