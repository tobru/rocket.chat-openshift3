{"version":3,"sources":["meteor://ðŸ’»app/server/settings.js","meteor://ðŸ’»app/server/models/Messages.js","meteor://ðŸ’»app/server/methods/deleteOldOTRMessages.js","meteor://ðŸ’»app/server/methods/updateOTRAck.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,UAAU,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,EAAE,YAAW;AAC9C,KAAI,CAAC,GAAG,CAAC,YAAY,EAAE,IAAI,EAAE;AAC5B,MAAI,EAAE,SAAS;AACf,WAAS,EAAE,SAAS;AACpB,YAAQ,IAAI;EACZ,CAAC,CAAC;CACH,CAAC,CAAC,uG;;;;;;;;;;;;;;;;;;ACNH,UAAU,CAAC,MAAM,CAAC,QAAQ,CAAC,oBAAoB,GAAG,UAAS,MAAM,EAAE,EAAE,EAAE;AACtE,KAAI,KAAK,GAAG,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC;AACxD,QAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;CAC1B,CAAC;;AAEF,UAAU,CAAC,MAAM,CAAC,QAAQ,CAAC,YAAY,GAAG,UAAS,GAAG,EAAE,MAAM,EAAE;AAC/D,KAAI,KAAK,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;AACzB,KAAI,MAAM,GAAG,EAAE,IAAI,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,EAAE,CAAC;AAC1C,QAAO,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;CAClC,CAAC,wG;;;;;;;;;;;;;;;;;;ACTF,MAAM,CAAC,OAAO,CAAC;AACd,qBAAoB,EAAE,UAAS,MAAM,EAAE;AACtC,MAAI,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE;AACrB,SAAM,IAAI,MAAM,CAAC,KAAK,CAAC,oBAAoB,EAAE,cAAc,EAAE,EAAE,MAAM,EAAE,sBAAsB,EAAE,CAAC,CAAC;GACjG;;AAED,MAAM,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC;AACvB,MAAM,YAAY,GAAG,UAAU,CAAC,MAAM,CAAC,aAAa,CAAC,wBAAwB,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC;AACvG,MAAI,YAAY,IAAI,YAAY,CAAC,CAAC,KAAK,GAAG,EAAE;AAC3C,aAAU,CAAC,MAAM,CAAC,QAAQ,CAAC,oBAAoB,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;GAC7D,MAAM;AACN,SAAM,IAAI,MAAM,CAAC,KAAK,CAAC,oBAAoB,EAAE,cAAc,EAAE,EAAE,MAAM,EAAE,sBAAsB,EAAE,CAAC,CAAC;GACjG;EACD;CACD,CAAC,CAAC,uG;;;;;;;;;;;;;;;;;;ACdH,MAAM,CAAC,OAAO,CAAC;AACd,aAAY,EAAE,UAAS,GAAG,EAAE,GAAG,EAAE;AAChC,MAAI,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE;AACrB,SAAM,IAAI,MAAM,CAAC,KAAK,CAAC,oBAAoB,EAAE,cAAc,EAAE,EAAE,MAAM,EAAE,cAAc,EAAE,CAAC,CAAC;GACzF;AACD,YAAU,CAAC,MAAM,CAAC,QAAQ,CAAC,YAAY,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;EAClD;CACD,CAAC,CAAC,uG","file":"/packages/rocketchat_otr.js","sourcesContent":["RocketChat.settings.addGroup('OTR', function() {\n\tthis.add('OTR_Enable', true, {\n\t\ttype: 'boolean',\n\t\ti18nLabel: 'Enabled',\n\t\tpublic: true\n\t});\n});\n","RocketChat.models.Messages.deleteOldOTRMessages = function(roomId, ts) {\n\tvar query = { rid: roomId, t: 'otr', ts: { $lte: ts } };\n\treturn this.remove(query);\n};\n\nRocketChat.models.Messages.updateOTRAck = function(_id, otrAck) {\n\tvar query = { _id: _id };\n\tvar update = { $set: { otrAck: otrAck } };\n\treturn this.update(query, update);\n};\n","Meteor.methods({\n\tdeleteOldOTRMessages: function(roomId) {\n\t\tif (!Meteor.userId()) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'deleteOldOTRMessages' });\n\t\t}\n\n\t\tconst now = new Date();\n\t\tconst subscription = RocketChat.models.Subscriptions.findOneByRoomIdAndUserId(roomId, Meteor.userId());\n\t\tif (subscription && subscription.t === 'd') {\n\t\t\tRocketChat.models.Messages.deleteOldOTRMessages(roomId, now);\n\t\t} else {\n\t\t\tthrow new Meteor.Error('error-invalid-room', 'Invalid room', { method: 'deleteOldOTRMessages' });\n\t\t}\n\t}\n});\n","Meteor.methods({\n\tupdateOTRAck: function(_id, ack) {\n\t\tif (!Meteor.userId()) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'updateOTRAck' });\n\t\t}\n\t\tRocketChat.models.Messages.updateOTRAck(_id, ack);\n\t}\n});\n"]}