{"version":3,"sources":["meteor://ðŸ’»app/messages.js","meteor://ðŸ’»app/server.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,UAAU,CAAC,MAAM,CAAC,QAAQ,CAAC,mCAAmC,GAAG,UAAS,MAAM,EAAE,IAAI,EAAE;AACvF,QAAO,IAAI,CAAC,kCAAkC,CAAC,iBAAiB,EAAE,MAAM,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;CACpF,CAAC,2F;;;;;;;;;;;;;;;;;;ACFF,SAAS,SAAS,CAAC,OAAO,EAAE,MAAM,EAAE,IAAI,EAAE;AACzC,KAAI,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC;AACxB,KAAI,OAAO,KAAK,WAAW,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,EAAE;AAC3D,SAAO;EACP;AACD,QAAO,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;AACxB,KAAI,OAAO,KAAK,EAAE,EAAE;AACnB,MAAI,GAAG,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACrD,SAAO,GAAG,IAAI,CAAC,IAAI,CAAC;EACpB,MAAM;AACN,SAAO,GAAG,OAAO,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;AACnC,MAAI,GAAG,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;EACtD;AACD,KAAI,GAAG,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC;;AAE7C,KAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;AACnB,YAAU,CAAC,aAAa,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,SAAS,EAAE;AAC/D,MAAG,EAAE,MAAM,CAAC,EAAE,EAAE;AAChB,MAAG,EAAE,IAAI,CAAC,GAAG;AACb,KAAE,EAAE,IAAI,IAAI,EAAE;AACd,MAAG,EAAE,OAAO,CAAC,EAAE,CAAC,4BAA4B,EAAE;AAC7C,eAAW,EAAE,SAAS;AACtB,WAAO,EAAE,CAAC,OAAO,CAAC;IAClB,EAAE,IAAI,CAAC,QAAQ,CAAC;GACjB,CAAC,CAAC;AACH,SAAO;EACP;AACD,OAAM,CAAC,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;AACvC,WAAU,CAAC,MAAM,CAAC,QAAQ,CAAC,mCAAmC,CAAC,IAAI,CAAC,GAAG,EAAE,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC;AACxF,WAAU,CAAC,aAAa,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,SAAS,EAAE;AAC/D,KAAG,EAAE,MAAM,CAAC,EAAE,EAAE;AAChB,KAAG,EAAE,IAAI,CAAC,GAAG;AACb,IAAE,EAAE,IAAI,IAAI,EAAE;AACd,KAAG,EAAE,OAAO,CAAC,EAAE,CAAC,oBAAoB,EAAE;AACrC,cAAW,EAAE,SAAS;AACtB,UAAO,EAAE,CAAC,OAAO,CAAC;GAClB,EAAE,IAAI,CAAC,QAAQ,CAAC;EACjB,CAAC,CAAC;AACH,QAAO,SAAS,CAAC;CACjB;;AAED,UAAU,CAAC,aAAa,CAAC,GAAG,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC,2C","file":"/packages/rocketchat_slashcommands-unarchive.js","sourcesContent":["RocketChat.models.Messages.createRoomUnarchivedByRoomIdAndUser = function(roomId, user) {\n\treturn this.createWithTypeRoomIdMessageAndUser('room-unarchived', roomId, '', user);\n};\n","function Unarchive(command, params, item) {\n\tvar channel, room, user;\n\tif (command !== 'unarchive' || !Match.test(params, String)) {\n\t\treturn;\n\t}\n\tchannel = params.trim();\n\tif (channel === '') {\n\t\troom = RocketChat.models.Rooms.findOneById(item.rid);\n\t\tchannel = room.name;\n\t} else {\n\t\tchannel = channel.replace('#', '');\n\t\troom = RocketChat.models.Rooms.findOneByName(channel);\n\t}\n\tuser = Meteor.users.findOne(Meteor.userId());\n\n\tif (!room.archived) {\n\t\tRocketChat.Notifications.notifyUser(Meteor.userId(), 'message', {\n\t\t\t_id: Random.id(),\n\t\t\trid: item.rid,\n\t\t\tts: new Date(),\n\t\t\tmsg: TAPi18n.__('Channel_already_Unarchived', {\n\t\t\t\tpostProcess: 'sprintf',\n\t\t\t\tsprintf: [channel]\n\t\t\t}, user.language)\n\t\t});\n\t\treturn;\n\t}\n\tMeteor.call('unarchiveRoom', room._id);\n\tRocketChat.models.Messages.createRoomUnarchivedByRoomIdAndUser(room._id, Meteor.user());\n\tRocketChat.Notifications.notifyUser(Meteor.userId(), 'message', {\n\t\t_id: Random.id(),\n\t\trid: item.rid,\n\t\tts: new Date(),\n\t\tmsg: TAPi18n.__('Channel_Unarchived', {\n\t\t\tpostProcess: 'sprintf',\n\t\t\tsprintf: [channel]\n\t\t}, user.language)\n\t});\n\treturn Unarchive;\n}\n\nRocketChat.slashCommands.add('unarchive', Unarchive);\n"]}