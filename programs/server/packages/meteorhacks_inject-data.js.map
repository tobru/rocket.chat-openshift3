{"version":3,"sources":["meteor://ðŸ’»app/packages/meteorhacks_inject-data/lib/namespace.js","meteor://ðŸ’»app/packages/meteorhacks_inject-data/lib/utils.js","meteor://ðŸ’»app/packages/meteorhacks_inject-data/lib/server.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAA,yE;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0E;;;;;;;;;;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0E","file":"/packages/meteorhacks_inject-data.js","sourcesContent":["InjectData = {};","InjectData._encode = function(ejson) {\n  var ejsonString = EJSON.stringify(ejson);\n  return encodeURIComponent(ejsonString);\n};\n\nInjectData._decode = function(encodedEjson) {\n  var decodedEjsonString = decodeURIComponent(encodedEjson);\n  if(!decodedEjsonString) return null;\n\n  return EJSON.parse(decodedEjsonString);\n};\n","var http = Npm.require('http');\n\nvar templateText = Assets.getText('lib/inject.html');\nvar injectDataTemplate = _.template(templateText);\n\n// custome API\nInjectData.pushData = function pushData(res, key, value) {\n  if(!res._injectPayload) {\n    res._injectPayload = {};\n  }\n\n  res._injectPayload[key] = value;\n  InjectData._hijackWriteIfNeeded(res);\n};\n\nInjectData.getData = function getData(res, key) {\n  if(res._injectPayload) {\n    return _.clone(res._injectPayload[key]);\n  } else {\n    return null;\n  }\n};\n\nInjectData._hijackWriteIfNeeded = function(res) {\n  if(res._writeHijacked) {\n    return;\n  }\n  res._writeHijacked = true;\n\n  var originalWrite = res.write;\n  res.write = function(chunk, encoding) {\n    var condition =\n      res._injectPayload && !res._injected &&\n      encoding === undefined &&\n      /<!DOCTYPE html>/.test(chunk);\n\n    if(condition) {\n      // if cors headers included if may cause some security holes\n      // so we simply turn off injecting if we detect an cors header\n      // read more: http://goo.gl/eGwb4e\n      if(res._headers['access-control-allow-origin']) {\n        var warnMessage =\n          'warn: injecting data turned off due to CORS headers. ' +\n          'read more: http://goo.gl/eGwb4e';\n\n        console.warn(warnMessage);\n        originalWrite.call(res, chunk, encoding);\n        return;\n      }\n\n      // inject data\n      var data = InjectData._encode(res._injectPayload);\n      var injectHtml = injectDataTemplate({data: data});\n\n      // if this is a buffer, convert it to string\n      chunk = chunk.toString();\n      chunk = chunk.replace('<script', injectHtml + '<script');\n\n      res._injected = true;\n    }\n\n    originalWrite.call(res, chunk, encoding);\n  };\n};\n"]}